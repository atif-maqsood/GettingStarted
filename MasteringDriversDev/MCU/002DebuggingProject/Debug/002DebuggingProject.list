
002DebuggingProject.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000140c  08000200  08000200  00010200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  0800160c  0800160c  0001160c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001700  08001700  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  08001700  08001700  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001700  08001700  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001700  08001700  00011700  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001704  08001704  00011704  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08001708  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  200000ac  080017b4  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000d8  080017b4  000200d8  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002283  00000000  00000000  000200da  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000646  00000000  00000000  0002235d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000138  00000000  00000000  000229a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000100  00000000  00000000  00022ae0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000282f  00000000  00000000  00022be0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001379  00000000  00000000  0002540f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000087d2  00000000  00000000  00026788  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002ef5a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c18  00000000  00000000  0002efd8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	; (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	; (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	200000ac 	.word	0x200000ac
 800021c:	00000000 	.word	0x00000000
 8000220:	080015f4 	.word	0x080015f4

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	; (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	; (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	200000b0 	.word	0x200000b0
 800023c:	080015f4 	.word	0x080015f4

08000240 <memchr>:
 8000240:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000244:	2a10      	cmp	r2, #16
 8000246:	db2b      	blt.n	80002a0 <memchr+0x60>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	d008      	beq.n	8000260 <memchr+0x20>
 800024e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000252:	3a01      	subs	r2, #1
 8000254:	428b      	cmp	r3, r1
 8000256:	d02d      	beq.n	80002b4 <memchr+0x74>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	b342      	cbz	r2, 80002b0 <memchr+0x70>
 800025e:	d1f6      	bne.n	800024e <memchr+0xe>
 8000260:	b4f0      	push	{r4, r5, r6, r7}
 8000262:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000266:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800026a:	f022 0407 	bic.w	r4, r2, #7
 800026e:	f07f 0700 	mvns.w	r7, #0
 8000272:	2300      	movs	r3, #0
 8000274:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000278:	3c08      	subs	r4, #8
 800027a:	ea85 0501 	eor.w	r5, r5, r1
 800027e:	ea86 0601 	eor.w	r6, r6, r1
 8000282:	fa85 f547 	uadd8	r5, r5, r7
 8000286:	faa3 f587 	sel	r5, r3, r7
 800028a:	fa86 f647 	uadd8	r6, r6, r7
 800028e:	faa5 f687 	sel	r6, r5, r7
 8000292:	b98e      	cbnz	r6, 80002b8 <memchr+0x78>
 8000294:	d1ee      	bne.n	8000274 <memchr+0x34>
 8000296:	bcf0      	pop	{r4, r5, r6, r7}
 8000298:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800029c:	f002 0207 	and.w	r2, r2, #7
 80002a0:	b132      	cbz	r2, 80002b0 <memchr+0x70>
 80002a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002a6:	3a01      	subs	r2, #1
 80002a8:	ea83 0301 	eor.w	r3, r3, r1
 80002ac:	b113      	cbz	r3, 80002b4 <memchr+0x74>
 80002ae:	d1f8      	bne.n	80002a2 <memchr+0x62>
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr
 80002b4:	3801      	subs	r0, #1
 80002b6:	4770      	bx	lr
 80002b8:	2d00      	cmp	r5, #0
 80002ba:	bf06      	itte	eq
 80002bc:	4635      	moveq	r5, r6
 80002be:	3803      	subeq	r0, #3
 80002c0:	3807      	subne	r0, #7
 80002c2:	f015 0f01 	tst.w	r5, #1
 80002c6:	d107      	bne.n	80002d8 <memchr+0x98>
 80002c8:	3001      	adds	r0, #1
 80002ca:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ce:	bf02      	ittt	eq
 80002d0:	3001      	addeq	r0, #1
 80002d2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002d6:	3001      	addeq	r0, #1
 80002d8:	bcf0      	pop	{r4, r5, r6, r7}
 80002da:	3801      	subs	r0, #1
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop

080002e0 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b084      	sub	sp, #16
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	6078      	str	r0, [r7, #4]
 80002e8:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 80002ea:	2300      	movs	r3, #0
 80002ec:	60fb      	str	r3, [r7, #12]
 80002ee:	e015      	b.n	800031c <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 80002f0:	f000 fa42 	bl	8000778 <rand>
 80002f4:	4602      	mov	r2, r0
 80002f6:	68fb      	ldr	r3, [r7, #12]
 80002f8:	009b      	lsls	r3, r3, #2
 80002fa:	6879      	ldr	r1, [r7, #4]
 80002fc:	4419      	add	r1, r3
 80002fe:	4b0b      	ldr	r3, [pc, #44]	; (800032c <array_fill_numbers+0x4c>)
 8000300:	fb83 0302 	smull	r0, r3, r3, r2
 8000304:	1198      	asrs	r0, r3, #6
 8000306:	17d3      	asrs	r3, r2, #31
 8000308:	1ac3      	subs	r3, r0, r3
 800030a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800030e:	fb00 f303 	mul.w	r3, r0, r3
 8000312:	1ad3      	subs	r3, r2, r3
 8000314:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 8000316:	68fb      	ldr	r3, [r7, #12]
 8000318:	3301      	adds	r3, #1
 800031a:	60fb      	str	r3, [r7, #12]
 800031c:	68fa      	ldr	r2, [r7, #12]
 800031e:	683b      	ldr	r3, [r7, #0]
 8000320:	429a      	cmp	r2, r3
 8000322:	d3e5      	bcc.n	80002f0 <array_fill_numbers+0x10>
    }

}
 8000324:	bf00      	nop
 8000326:	3710      	adds	r7, #16
 8000328:	46bd      	mov	sp, r7
 800032a:	bd80      	pop	{r7, pc}
 800032c:	10624dd3 	.word	0x10624dd3

08000330 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 8000330:	b580      	push	{r7, lr}
 8000332:	b086      	sub	sp, #24
 8000334:	af00      	add	r7, sp, #0
 8000336:	60f8      	str	r0, [r7, #12]
 8000338:	60b9      	str	r1, [r7, #8]
 800033a:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 800033c:	6879      	ldr	r1, [r7, #4]
 800033e:	480e      	ldr	r0, [pc, #56]	; (8000378 <display_numbers+0x48>)
 8000340:	f000 f9ee 	bl	8000720 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 8000344:	2300      	movs	r3, #0
 8000346:	617b      	str	r3, [r7, #20]
 8000348:	e00b      	b.n	8000362 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 800034a:	697b      	ldr	r3, [r7, #20]
 800034c:	009b      	lsls	r3, r3, #2
 800034e:	68fa      	ldr	r2, [r7, #12]
 8000350:	4413      	add	r3, r2
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	4619      	mov	r1, r3
 8000356:	4809      	ldr	r0, [pc, #36]	; (800037c <display_numbers+0x4c>)
 8000358:	f000 f9e2 	bl	8000720 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 800035c:	697b      	ldr	r3, [r7, #20]
 800035e:	3301      	adds	r3, #1
 8000360:	617b      	str	r3, [r7, #20]
 8000362:	697a      	ldr	r2, [r7, #20]
 8000364:	68bb      	ldr	r3, [r7, #8]
 8000366:	429a      	cmp	r2, r3
 8000368:	d3ef      	bcc.n	800034a <display_numbers+0x1a>
    }

    printf("\n");
 800036a:	200a      	movs	r0, #10
 800036c:	f000 f9f0 	bl	8000750 <putchar>
}
 8000370:	bf00      	nop
 8000372:	3718      	adds	r7, #24
 8000374:	46bd      	mov	sp, r7
 8000376:	bd80      	pop	{r7, pc}
 8000378:	0800160c 	.word	0x0800160c
 800037c:	08001610 	.word	0x08001610

08000380 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
 8000388:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000390:	683b      	ldr	r3, [r7, #0]
 8000392:	681a      	ldr	r2, [r3, #0]
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	601a      	str	r2, [r3, #0]
     *y=temp;
 8000398:	683b      	ldr	r3, [r7, #0]
 800039a:	68fa      	ldr	r2, [r7, #12]
 800039c:	601a      	str	r2, [r3, #0]

//#if 0
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
 800039e:	4b05      	ldr	r3, [pc, #20]	; (80003b4 <swap_numbers+0x34>)
 80003a0:	60bb      	str	r3, [r7, #8]
     jump_addr();
 80003a2:	68bb      	ldr	r3, [r7, #8]
 80003a4:	4798      	blx	r3
//#endif

     someData = 10;
 80003a6:	4b04      	ldr	r3, [pc, #16]	; (80003b8 <swap_numbers+0x38>)
 80003a8:	220a      	movs	r2, #10
 80003aa:	601a      	str	r2, [r3, #0]
}
 80003ac:	bf00      	nop
 80003ae:	3710      	adds	r7, #16
 80003b0:	46bd      	mov	sp, r7
 80003b2:	bd80      	pop	{r7, pc}
 80003b4:	20000009 	.word	0x20000009
 80003b8:	20000044 	.word	0x20000044

080003bc <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 80003bc:	b580      	push	{r7, lr}
 80003be:	b086      	sub	sp, #24
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]
 80003c4:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 80003c6:	2300      	movs	r3, #0
 80003c8:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 80003ca:	2300      	movs	r3, #0
 80003cc:	617b      	str	r3, [r7, #20]
 80003ce:	e02f      	b.n	8000430 <bubble_sort+0x74>
    {
        flag=0;
 80003d0:	2300      	movs	r3, #0
 80003d2:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 80003d4:	2300      	movs	r3, #0
 80003d6:	613b      	str	r3, [r7, #16]
 80003d8:	e01d      	b.n	8000416 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 80003da:	693b      	ldr	r3, [r7, #16]
 80003dc:	009b      	lsls	r3, r3, #2
 80003de:	687a      	ldr	r2, [r7, #4]
 80003e0:	4413      	add	r3, r2
 80003e2:	681a      	ldr	r2, [r3, #0]
 80003e4:	693b      	ldr	r3, [r7, #16]
 80003e6:	3301      	adds	r3, #1
 80003e8:	009b      	lsls	r3, r3, #2
 80003ea:	6879      	ldr	r1, [r7, #4]
 80003ec:	440b      	add	r3, r1
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	429a      	cmp	r2, r3
 80003f2:	dd0d      	ble.n	8000410 <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 80003f4:	693b      	ldr	r3, [r7, #16]
 80003f6:	009b      	lsls	r3, r3, #2
 80003f8:	687a      	ldr	r2, [r7, #4]
 80003fa:	18d0      	adds	r0, r2, r3
 80003fc:	693b      	ldr	r3, [r7, #16]
 80003fe:	3301      	adds	r3, #1
 8000400:	009b      	lsls	r3, r3, #2
 8000402:	687a      	ldr	r2, [r7, #4]
 8000404:	4413      	add	r3, r2
 8000406:	4619      	mov	r1, r3
 8000408:	f7ff ffba 	bl	8000380 <swap_numbers>
                flag=1;
 800040c:	2301      	movs	r3, #1
 800040e:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 8000410:	693b      	ldr	r3, [r7, #16]
 8000412:	3301      	adds	r3, #1
 8000414:	613b      	str	r3, [r7, #16]
 8000416:	697b      	ldr	r3, [r7, #20]
 8000418:	683a      	ldr	r2, [r7, #0]
 800041a:	1ad3      	subs	r3, r2, r3
 800041c:	1e5a      	subs	r2, r3, #1
 800041e:	693b      	ldr	r3, [r7, #16]
 8000420:	429a      	cmp	r2, r3
 8000422:	d8da      	bhi.n	80003da <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 8000424:	68fb      	ldr	r3, [r7, #12]
 8000426:	2b00      	cmp	r3, #0
 8000428:	d008      	beq.n	800043c <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 800042a:	697b      	ldr	r3, [r7, #20]
 800042c:	3301      	adds	r3, #1
 800042e:	617b      	str	r3, [r7, #20]
 8000430:	683b      	ldr	r3, [r7, #0]
 8000432:	1e5a      	subs	r2, r3, #1
 8000434:	697b      	ldr	r3, [r7, #20]
 8000436:	429a      	cmp	r2, r3
 8000438:	d8ca      	bhi.n	80003d0 <bubble_sort+0x14>
            break;
    }
}
 800043a:	e000      	b.n	800043e <bubble_sort+0x82>
            break;
 800043c:	bf00      	nop
}
 800043e:	bf00      	nop
 8000440:	3718      	adds	r7, #24
 8000442:	46bd      	mov	sp, r7
 8000444:	bd80      	pop	{r7, pc}

08000446 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 8000446:	b480      	push	{r7}
 8000448:	b087      	sub	sp, #28
 800044a:	af00      	add	r7, sp, #0
 800044c:	6078      	str	r0, [r7, #4]
 800044e:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 8000450:	2301      	movs	r3, #1
 8000452:	617b      	str	r3, [r7, #20]
 8000454:	e02c      	b.n	80004b0 <insertion_sort+0x6a>
     {
         j=i-1;
 8000456:	697b      	ldr	r3, [r7, #20]
 8000458:	3b01      	subs	r3, #1
 800045a:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 800045c:	697b      	ldr	r3, [r7, #20]
 800045e:	009b      	lsls	r3, r3, #2
 8000460:	687a      	ldr	r2, [r7, #4]
 8000462:	4413      	add	r3, r2
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000468:	e00d      	b.n	8000486 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 800046a:	693b      	ldr	r3, [r7, #16]
 800046c:	009b      	lsls	r3, r3, #2
 800046e:	687a      	ldr	r2, [r7, #4]
 8000470:	441a      	add	r2, r3
 8000472:	693b      	ldr	r3, [r7, #16]
 8000474:	3301      	adds	r3, #1
 8000476:	009b      	lsls	r3, r3, #2
 8000478:	6879      	ldr	r1, [r7, #4]
 800047a:	440b      	add	r3, r1
 800047c:	6812      	ldr	r2, [r2, #0]
 800047e:	601a      	str	r2, [r3, #0]
             j--;
 8000480:	693b      	ldr	r3, [r7, #16]
 8000482:	3b01      	subs	r3, #1
 8000484:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000486:	693b      	ldr	r3, [r7, #16]
 8000488:	2b00      	cmp	r3, #0
 800048a:	db07      	blt.n	800049c <insertion_sort+0x56>
 800048c:	693b      	ldr	r3, [r7, #16]
 800048e:	009b      	lsls	r3, r3, #2
 8000490:	687a      	ldr	r2, [r7, #4]
 8000492:	4413      	add	r3, r2
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	68fa      	ldr	r2, [r7, #12]
 8000498:	429a      	cmp	r2, r3
 800049a:	dbe6      	blt.n	800046a <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 800049c:	693b      	ldr	r3, [r7, #16]
 800049e:	3301      	adds	r3, #1
 80004a0:	009b      	lsls	r3, r3, #2
 80004a2:	687a      	ldr	r2, [r7, #4]
 80004a4:	4413      	add	r3, r2
 80004a6:	68fa      	ldr	r2, [r7, #12]
 80004a8:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 80004aa:	697b      	ldr	r3, [r7, #20]
 80004ac:	3301      	adds	r3, #1
 80004ae:	617b      	str	r3, [r7, #20]
 80004b0:	697b      	ldr	r3, [r7, #20]
 80004b2:	683a      	ldr	r2, [r7, #0]
 80004b4:	429a      	cmp	r2, r3
 80004b6:	d8ce      	bhi.n	8000456 <insertion_sort+0x10>
     }


}
 80004b8:	bf00      	nop
 80004ba:	371c      	adds	r7, #28
 80004bc:	46bd      	mov	sp, r7
 80004be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c2:	4770      	bx	lr

080004c4 <main>:



int main()
{
 80004c4:	b580      	push	{r7, lr}
 80004c6:	b082      	sub	sp, #8
 80004c8:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 80004ca:	2311      	movs	r3, #17
 80004cc:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 80004ce:	6879      	ldr	r1, [r7, #4]
 80004d0:	4813      	ldr	r0, [pc, #76]	; (8000520 <main+0x5c>)
 80004d2:	f7ff ff05 	bl	80002e0 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 80004d6:	4a13      	ldr	r2, [pc, #76]	; (8000524 <main+0x60>)
 80004d8:	6879      	ldr	r1, [r7, #4]
 80004da:	4811      	ldr	r0, [pc, #68]	; (8000520 <main+0x5c>)
 80004dc:	f7ff ff28 	bl	8000330 <display_numbers>

    bubble_sort(numbers,len);
 80004e0:	6879      	ldr	r1, [r7, #4]
 80004e2:	480f      	ldr	r0, [pc, #60]	; (8000520 <main+0x5c>)
 80004e4:	f7ff ff6a 	bl	80003bc <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 80004e8:	4a0f      	ldr	r2, [pc, #60]	; (8000528 <main+0x64>)
 80004ea:	6879      	ldr	r1, [r7, #4]
 80004ec:	480c      	ldr	r0, [pc, #48]	; (8000520 <main+0x5c>)
 80004ee:	f7ff ff1f 	bl	8000330 <display_numbers>

    array_fill_numbers(numbers,len);
 80004f2:	6879      	ldr	r1, [r7, #4]
 80004f4:	480a      	ldr	r0, [pc, #40]	; (8000520 <main+0x5c>)
 80004f6:	f7ff fef3 	bl	80002e0 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004fa:	4a0c      	ldr	r2, [pc, #48]	; (800052c <main+0x68>)
 80004fc:	6879      	ldr	r1, [r7, #4]
 80004fe:	4808      	ldr	r0, [pc, #32]	; (8000520 <main+0x5c>)
 8000500:	f7ff ff16 	bl	8000330 <display_numbers>

    insertion_sort(numbers,len);
 8000504:	6879      	ldr	r1, [r7, #4]
 8000506:	4806      	ldr	r0, [pc, #24]	; (8000520 <main+0x5c>)
 8000508:	f7ff ff9d 	bl	8000446 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 800050c:	4a08      	ldr	r2, [pc, #32]	; (8000530 <main+0x6c>)
 800050e:	6879      	ldr	r1, [r7, #4]
 8000510:	4803      	ldr	r0, [pc, #12]	; (8000520 <main+0x5c>)
 8000512:	f7ff ff0d 	bl	8000330 <display_numbers>



    return 0;
 8000516:	2300      	movs	r3, #0
}
 8000518:	4618      	mov	r0, r3
 800051a:	3708      	adds	r7, #8
 800051c:	46bd      	mov	sp, r7
 800051e:	bd80      	pop	{r7, pc}
 8000520:	20000000 	.word	0x20000000
 8000524:	08001618 	.word	0x08001618
 8000528:	0800162c 	.word	0x0800162c
 800052c:	08001640 	.word	0x08001640
 8000530:	08001654 	.word	0x08001654

08000534 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000534:	b580      	push	{r7, lr}
 8000536:	b086      	sub	sp, #24
 8000538:	af00      	add	r7, sp, #0
 800053a:	60f8      	str	r0, [r7, #12]
 800053c:	60b9      	str	r1, [r7, #8]
 800053e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000540:	2300      	movs	r3, #0
 8000542:	617b      	str	r3, [r7, #20]
 8000544:	e00a      	b.n	800055c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000546:	f3af 8000 	nop.w
 800054a:	4601      	mov	r1, r0
 800054c:	68bb      	ldr	r3, [r7, #8]
 800054e:	1c5a      	adds	r2, r3, #1
 8000550:	60ba      	str	r2, [r7, #8]
 8000552:	b2ca      	uxtb	r2, r1
 8000554:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000556:	697b      	ldr	r3, [r7, #20]
 8000558:	3301      	adds	r3, #1
 800055a:	617b      	str	r3, [r7, #20]
 800055c:	697a      	ldr	r2, [r7, #20]
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	429a      	cmp	r2, r3
 8000562:	dbf0      	blt.n	8000546 <_read+0x12>
	}

return len;
 8000564:	687b      	ldr	r3, [r7, #4]
}
 8000566:	4618      	mov	r0, r3
 8000568:	3718      	adds	r7, #24
 800056a:	46bd      	mov	sp, r7
 800056c:	bd80      	pop	{r7, pc}

0800056e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800056e:	b580      	push	{r7, lr}
 8000570:	b086      	sub	sp, #24
 8000572:	af00      	add	r7, sp, #0
 8000574:	60f8      	str	r0, [r7, #12]
 8000576:	60b9      	str	r1, [r7, #8]
 8000578:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800057a:	2300      	movs	r3, #0
 800057c:	617b      	str	r3, [r7, #20]
 800057e:	e009      	b.n	8000594 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000580:	68bb      	ldr	r3, [r7, #8]
 8000582:	1c5a      	adds	r2, r3, #1
 8000584:	60ba      	str	r2, [r7, #8]
 8000586:	781b      	ldrb	r3, [r3, #0]
 8000588:	4618      	mov	r0, r3
 800058a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800058e:	697b      	ldr	r3, [r7, #20]
 8000590:	3301      	adds	r3, #1
 8000592:	617b      	str	r3, [r7, #20]
 8000594:	697a      	ldr	r2, [r7, #20]
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	429a      	cmp	r2, r3
 800059a:	dbf1      	blt.n	8000580 <_write+0x12>
	}
	return len;
 800059c:	687b      	ldr	r3, [r7, #4]
}
 800059e:	4618      	mov	r0, r3
 80005a0:	3718      	adds	r7, #24
 80005a2:	46bd      	mov	sp, r7
 80005a4:	bd80      	pop	{r7, pc}

080005a6 <_close>:

int _close(int file)
{
 80005a6:	b480      	push	{r7}
 80005a8:	b083      	sub	sp, #12
 80005aa:	af00      	add	r7, sp, #0
 80005ac:	6078      	str	r0, [r7, #4]
	return -1;
 80005ae:	f04f 33ff 	mov.w	r3, #4294967295
}
 80005b2:	4618      	mov	r0, r3
 80005b4:	370c      	adds	r7, #12
 80005b6:	46bd      	mov	sp, r7
 80005b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005bc:	4770      	bx	lr

080005be <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005be:	b480      	push	{r7}
 80005c0:	b083      	sub	sp, #12
 80005c2:	af00      	add	r7, sp, #0
 80005c4:	6078      	str	r0, [r7, #4]
 80005c6:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80005c8:	683b      	ldr	r3, [r7, #0]
 80005ca:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80005ce:	605a      	str	r2, [r3, #4]
	return 0;
 80005d0:	2300      	movs	r3, #0
}
 80005d2:	4618      	mov	r0, r3
 80005d4:	370c      	adds	r7, #12
 80005d6:	46bd      	mov	sp, r7
 80005d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005dc:	4770      	bx	lr

080005de <_isatty>:

int _isatty(int file)
{
 80005de:	b480      	push	{r7}
 80005e0:	b083      	sub	sp, #12
 80005e2:	af00      	add	r7, sp, #0
 80005e4:	6078      	str	r0, [r7, #4]
	return 1;
 80005e6:	2301      	movs	r3, #1
}
 80005e8:	4618      	mov	r0, r3
 80005ea:	370c      	adds	r7, #12
 80005ec:	46bd      	mov	sp, r7
 80005ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f2:	4770      	bx	lr

080005f4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005f4:	b480      	push	{r7}
 80005f6:	b085      	sub	sp, #20
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	60f8      	str	r0, [r7, #12]
 80005fc:	60b9      	str	r1, [r7, #8]
 80005fe:	607a      	str	r2, [r7, #4]
	return 0;
 8000600:	2300      	movs	r3, #0
}
 8000602:	4618      	mov	r0, r3
 8000604:	3714      	adds	r7, #20
 8000606:	46bd      	mov	sp, r7
 8000608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800060c:	4770      	bx	lr
	...

08000610 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000610:	b580      	push	{r7, lr}
 8000612:	b084      	sub	sp, #16
 8000614:	af00      	add	r7, sp, #0
 8000616:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8000618:	4b11      	ldr	r3, [pc, #68]	; (8000660 <_sbrk+0x50>)
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	2b00      	cmp	r3, #0
 800061e:	d102      	bne.n	8000626 <_sbrk+0x16>
		heap_end = &end;
 8000620:	4b0f      	ldr	r3, [pc, #60]	; (8000660 <_sbrk+0x50>)
 8000622:	4a10      	ldr	r2, [pc, #64]	; (8000664 <_sbrk+0x54>)
 8000624:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8000626:	4b0e      	ldr	r3, [pc, #56]	; (8000660 <_sbrk+0x50>)
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 800062c:	4b0c      	ldr	r3, [pc, #48]	; (8000660 <_sbrk+0x50>)
 800062e:	681a      	ldr	r2, [r3, #0]
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	4413      	add	r3, r2
 8000634:	466a      	mov	r2, sp
 8000636:	4293      	cmp	r3, r2
 8000638:	d907      	bls.n	800064a <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800063a:	f000 f83f 	bl	80006bc <__errno>
 800063e:	4602      	mov	r2, r0
 8000640:	230c      	movs	r3, #12
 8000642:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8000644:	f04f 33ff 	mov.w	r3, #4294967295
 8000648:	e006      	b.n	8000658 <_sbrk+0x48>
	}

	heap_end += incr;
 800064a:	4b05      	ldr	r3, [pc, #20]	; (8000660 <_sbrk+0x50>)
 800064c:	681a      	ldr	r2, [r3, #0]
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	4413      	add	r3, r2
 8000652:	4a03      	ldr	r2, [pc, #12]	; (8000660 <_sbrk+0x50>)
 8000654:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8000656:	68fb      	ldr	r3, [r7, #12]
}
 8000658:	4618      	mov	r0, r3
 800065a:	3710      	adds	r7, #16
 800065c:	46bd      	mov	sp, r7
 800065e:	bd80      	pop	{r7, pc}
 8000660:	200000c8 	.word	0x200000c8
 8000664:	200000d8 	.word	0x200000d8

08000668 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000668:	480d      	ldr	r0, [pc, #52]	; (80006a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800066a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800066c:	480d      	ldr	r0, [pc, #52]	; (80006a4 <LoopForever+0x6>)
  ldr r1, =_edata
 800066e:	490e      	ldr	r1, [pc, #56]	; (80006a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000670:	4a0e      	ldr	r2, [pc, #56]	; (80006ac <LoopForever+0xe>)
  movs r3, #0
 8000672:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000674:	e002      	b.n	800067c <LoopCopyDataInit>

08000676 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000676:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000678:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800067a:	3304      	adds	r3, #4

0800067c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800067c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800067e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000680:	d3f9      	bcc.n	8000676 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000682:	4a0b      	ldr	r2, [pc, #44]	; (80006b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000684:	4c0b      	ldr	r4, [pc, #44]	; (80006b4 <LoopForever+0x16>)
  movs r3, #0
 8000686:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000688:	e001      	b.n	800068e <LoopFillZerobss>

0800068a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800068a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800068c:	3204      	adds	r2, #4

0800068e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800068e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000690:	d3fb      	bcc.n	800068a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000692:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000696:	f000 f817 	bl	80006c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800069a:	f7ff ff13 	bl	80004c4 <main>

0800069e <LoopForever>:

LoopForever:
    b LoopForever
 800069e:	e7fe      	b.n	800069e <LoopForever>
  ldr   r0, =_estack
 80006a0:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 80006a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006a8:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 80006ac:	08001708 	.word	0x08001708
  ldr r2, =_sbss
 80006b0:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 80006b4:	200000d8 	.word	0x200000d8

080006b8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006b8:	e7fe      	b.n	80006b8 <ADC_IRQHandler>
	...

080006bc <__errno>:
 80006bc:	4b01      	ldr	r3, [pc, #4]	; (80006c4 <__errno+0x8>)
 80006be:	6818      	ldr	r0, [r3, #0]
 80006c0:	4770      	bx	lr
 80006c2:	bf00      	nop
 80006c4:	20000048 	.word	0x20000048

080006c8 <__libc_init_array>:
 80006c8:	b570      	push	{r4, r5, r6, lr}
 80006ca:	4e0d      	ldr	r6, [pc, #52]	; (8000700 <__libc_init_array+0x38>)
 80006cc:	4c0d      	ldr	r4, [pc, #52]	; (8000704 <__libc_init_array+0x3c>)
 80006ce:	1ba4      	subs	r4, r4, r6
 80006d0:	10a4      	asrs	r4, r4, #2
 80006d2:	2500      	movs	r5, #0
 80006d4:	42a5      	cmp	r5, r4
 80006d6:	d109      	bne.n	80006ec <__libc_init_array+0x24>
 80006d8:	4e0b      	ldr	r6, [pc, #44]	; (8000708 <__libc_init_array+0x40>)
 80006da:	4c0c      	ldr	r4, [pc, #48]	; (800070c <__libc_init_array+0x44>)
 80006dc:	f000 ff8a 	bl	80015f4 <_init>
 80006e0:	1ba4      	subs	r4, r4, r6
 80006e2:	10a4      	asrs	r4, r4, #2
 80006e4:	2500      	movs	r5, #0
 80006e6:	42a5      	cmp	r5, r4
 80006e8:	d105      	bne.n	80006f6 <__libc_init_array+0x2e>
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006f0:	4798      	blx	r3
 80006f2:	3501      	adds	r5, #1
 80006f4:	e7ee      	b.n	80006d4 <__libc_init_array+0xc>
 80006f6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006fa:	4798      	blx	r3
 80006fc:	3501      	adds	r5, #1
 80006fe:	e7f2      	b.n	80006e6 <__libc_init_array+0x1e>
 8000700:	08001700 	.word	0x08001700
 8000704:	08001700 	.word	0x08001700
 8000708:	08001700 	.word	0x08001700
 800070c:	08001704 	.word	0x08001704

08000710 <memset>:
 8000710:	4402      	add	r2, r0
 8000712:	4603      	mov	r3, r0
 8000714:	4293      	cmp	r3, r2
 8000716:	d100      	bne.n	800071a <memset+0xa>
 8000718:	4770      	bx	lr
 800071a:	f803 1b01 	strb.w	r1, [r3], #1
 800071e:	e7f9      	b.n	8000714 <memset+0x4>

08000720 <iprintf>:
 8000720:	b40f      	push	{r0, r1, r2, r3}
 8000722:	4b0a      	ldr	r3, [pc, #40]	; (800074c <iprintf+0x2c>)
 8000724:	b513      	push	{r0, r1, r4, lr}
 8000726:	681c      	ldr	r4, [r3, #0]
 8000728:	b124      	cbz	r4, 8000734 <iprintf+0x14>
 800072a:	69a3      	ldr	r3, [r4, #24]
 800072c:	b913      	cbnz	r3, 8000734 <iprintf+0x14>
 800072e:	4620      	mov	r0, r4
 8000730:	f000 f896 	bl	8000860 <__sinit>
 8000734:	ab05      	add	r3, sp, #20
 8000736:	9a04      	ldr	r2, [sp, #16]
 8000738:	68a1      	ldr	r1, [r4, #8]
 800073a:	9301      	str	r3, [sp, #4]
 800073c:	4620      	mov	r0, r4
 800073e:	f000 f9f3 	bl	8000b28 <_vfiprintf_r>
 8000742:	b002      	add	sp, #8
 8000744:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000748:	b004      	add	sp, #16
 800074a:	4770      	bx	lr
 800074c:	20000048 	.word	0x20000048

08000750 <putchar>:
 8000750:	b538      	push	{r3, r4, r5, lr}
 8000752:	4b08      	ldr	r3, [pc, #32]	; (8000774 <putchar+0x24>)
 8000754:	681c      	ldr	r4, [r3, #0]
 8000756:	4605      	mov	r5, r0
 8000758:	b124      	cbz	r4, 8000764 <putchar+0x14>
 800075a:	69a3      	ldr	r3, [r4, #24]
 800075c:	b913      	cbnz	r3, 8000764 <putchar+0x14>
 800075e:	4620      	mov	r0, r4
 8000760:	f000 f87e 	bl	8000860 <__sinit>
 8000764:	68a2      	ldr	r2, [r4, #8]
 8000766:	4629      	mov	r1, r5
 8000768:	4620      	mov	r0, r4
 800076a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800076e:	f000 bc79 	b.w	8001064 <_putc_r>
 8000772:	bf00      	nop
 8000774:	20000048 	.word	0x20000048

08000778 <rand>:
 8000778:	b538      	push	{r3, r4, r5, lr}
 800077a:	4b13      	ldr	r3, [pc, #76]	; (80007c8 <rand+0x50>)
 800077c:	681c      	ldr	r4, [r3, #0]
 800077e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000780:	b97b      	cbnz	r3, 80007a2 <rand+0x2a>
 8000782:	2018      	movs	r0, #24
 8000784:	f000 f8f6 	bl	8000974 <malloc>
 8000788:	4a10      	ldr	r2, [pc, #64]	; (80007cc <rand+0x54>)
 800078a:	4b11      	ldr	r3, [pc, #68]	; (80007d0 <rand+0x58>)
 800078c:	63a0      	str	r0, [r4, #56]	; 0x38
 800078e:	e9c0 2300 	strd	r2, r3, [r0]
 8000792:	4b10      	ldr	r3, [pc, #64]	; (80007d4 <rand+0x5c>)
 8000794:	6083      	str	r3, [r0, #8]
 8000796:	230b      	movs	r3, #11
 8000798:	8183      	strh	r3, [r0, #12]
 800079a:	2201      	movs	r2, #1
 800079c:	2300      	movs	r3, #0
 800079e:	e9c0 2304 	strd	r2, r3, [r0, #16]
 80007a2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80007a4:	480c      	ldr	r0, [pc, #48]	; (80007d8 <rand+0x60>)
 80007a6:	690a      	ldr	r2, [r1, #16]
 80007a8:	694b      	ldr	r3, [r1, #20]
 80007aa:	4c0c      	ldr	r4, [pc, #48]	; (80007dc <rand+0x64>)
 80007ac:	4350      	muls	r0, r2
 80007ae:	fb04 0003 	mla	r0, r4, r3, r0
 80007b2:	fba2 2304 	umull	r2, r3, r2, r4
 80007b6:	4403      	add	r3, r0
 80007b8:	1c54      	adds	r4, r2, #1
 80007ba:	f143 0500 	adc.w	r5, r3, #0
 80007be:	e9c1 4504 	strd	r4, r5, [r1, #16]
 80007c2:	f025 4000 	bic.w	r0, r5, #2147483648	; 0x80000000
 80007c6:	bd38      	pop	{r3, r4, r5, pc}
 80007c8:	20000048 	.word	0x20000048
 80007cc:	abcd330e 	.word	0xabcd330e
 80007d0:	e66d1234 	.word	0xe66d1234
 80007d4:	0005deec 	.word	0x0005deec
 80007d8:	5851f42d 	.word	0x5851f42d
 80007dc:	4c957f2d 	.word	0x4c957f2d

080007e0 <std>:
 80007e0:	2300      	movs	r3, #0
 80007e2:	b510      	push	{r4, lr}
 80007e4:	4604      	mov	r4, r0
 80007e6:	e9c0 3300 	strd	r3, r3, [r0]
 80007ea:	6083      	str	r3, [r0, #8]
 80007ec:	8181      	strh	r1, [r0, #12]
 80007ee:	6643      	str	r3, [r0, #100]	; 0x64
 80007f0:	81c2      	strh	r2, [r0, #14]
 80007f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007f6:	6183      	str	r3, [r0, #24]
 80007f8:	4619      	mov	r1, r3
 80007fa:	2208      	movs	r2, #8
 80007fc:	305c      	adds	r0, #92	; 0x5c
 80007fe:	f7ff ff87 	bl	8000710 <memset>
 8000802:	4b05      	ldr	r3, [pc, #20]	; (8000818 <std+0x38>)
 8000804:	6263      	str	r3, [r4, #36]	; 0x24
 8000806:	4b05      	ldr	r3, [pc, #20]	; (800081c <std+0x3c>)
 8000808:	62a3      	str	r3, [r4, #40]	; 0x28
 800080a:	4b05      	ldr	r3, [pc, #20]	; (8000820 <std+0x40>)
 800080c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800080e:	4b05      	ldr	r3, [pc, #20]	; (8000824 <std+0x44>)
 8000810:	6224      	str	r4, [r4, #32]
 8000812:	6323      	str	r3, [r4, #48]	; 0x30
 8000814:	bd10      	pop	{r4, pc}
 8000816:	bf00      	nop
 8000818:	080010f1 	.word	0x080010f1
 800081c:	08001113 	.word	0x08001113
 8000820:	0800114b 	.word	0x0800114b
 8000824:	0800116f 	.word	0x0800116f

08000828 <_cleanup_r>:
 8000828:	4901      	ldr	r1, [pc, #4]	; (8000830 <_cleanup_r+0x8>)
 800082a:	f000 b885 	b.w	8000938 <_fwalk_reent>
 800082e:	bf00      	nop
 8000830:	08001449 	.word	0x08001449

08000834 <__sfmoreglue>:
 8000834:	b570      	push	{r4, r5, r6, lr}
 8000836:	1e4a      	subs	r2, r1, #1
 8000838:	2568      	movs	r5, #104	; 0x68
 800083a:	4355      	muls	r5, r2
 800083c:	460e      	mov	r6, r1
 800083e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000842:	f000 f8ed 	bl	8000a20 <_malloc_r>
 8000846:	4604      	mov	r4, r0
 8000848:	b140      	cbz	r0, 800085c <__sfmoreglue+0x28>
 800084a:	2100      	movs	r1, #0
 800084c:	e9c0 1600 	strd	r1, r6, [r0]
 8000850:	300c      	adds	r0, #12
 8000852:	60a0      	str	r0, [r4, #8]
 8000854:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000858:	f7ff ff5a 	bl	8000710 <memset>
 800085c:	4620      	mov	r0, r4
 800085e:	bd70      	pop	{r4, r5, r6, pc}

08000860 <__sinit>:
 8000860:	6983      	ldr	r3, [r0, #24]
 8000862:	b510      	push	{r4, lr}
 8000864:	4604      	mov	r4, r0
 8000866:	bb33      	cbnz	r3, 80008b6 <__sinit+0x56>
 8000868:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 800086c:	6503      	str	r3, [r0, #80]	; 0x50
 800086e:	4b12      	ldr	r3, [pc, #72]	; (80008b8 <__sinit+0x58>)
 8000870:	4a12      	ldr	r2, [pc, #72]	; (80008bc <__sinit+0x5c>)
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	6282      	str	r2, [r0, #40]	; 0x28
 8000876:	4298      	cmp	r0, r3
 8000878:	bf04      	itt	eq
 800087a:	2301      	moveq	r3, #1
 800087c:	6183      	streq	r3, [r0, #24]
 800087e:	f000 f81f 	bl	80008c0 <__sfp>
 8000882:	6060      	str	r0, [r4, #4]
 8000884:	4620      	mov	r0, r4
 8000886:	f000 f81b 	bl	80008c0 <__sfp>
 800088a:	60a0      	str	r0, [r4, #8]
 800088c:	4620      	mov	r0, r4
 800088e:	f000 f817 	bl	80008c0 <__sfp>
 8000892:	2200      	movs	r2, #0
 8000894:	60e0      	str	r0, [r4, #12]
 8000896:	2104      	movs	r1, #4
 8000898:	6860      	ldr	r0, [r4, #4]
 800089a:	f7ff ffa1 	bl	80007e0 <std>
 800089e:	2201      	movs	r2, #1
 80008a0:	2109      	movs	r1, #9
 80008a2:	68a0      	ldr	r0, [r4, #8]
 80008a4:	f7ff ff9c 	bl	80007e0 <std>
 80008a8:	2202      	movs	r2, #2
 80008aa:	2112      	movs	r1, #18
 80008ac:	68e0      	ldr	r0, [r4, #12]
 80008ae:	f7ff ff97 	bl	80007e0 <std>
 80008b2:	2301      	movs	r3, #1
 80008b4:	61a3      	str	r3, [r4, #24]
 80008b6:	bd10      	pop	{r4, pc}
 80008b8:	08001668 	.word	0x08001668
 80008bc:	08000829 	.word	0x08000829

080008c0 <__sfp>:
 80008c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008c2:	4b1b      	ldr	r3, [pc, #108]	; (8000930 <__sfp+0x70>)
 80008c4:	681e      	ldr	r6, [r3, #0]
 80008c6:	69b3      	ldr	r3, [r6, #24]
 80008c8:	4607      	mov	r7, r0
 80008ca:	b913      	cbnz	r3, 80008d2 <__sfp+0x12>
 80008cc:	4630      	mov	r0, r6
 80008ce:	f7ff ffc7 	bl	8000860 <__sinit>
 80008d2:	3648      	adds	r6, #72	; 0x48
 80008d4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008d8:	3b01      	subs	r3, #1
 80008da:	d503      	bpl.n	80008e4 <__sfp+0x24>
 80008dc:	6833      	ldr	r3, [r6, #0]
 80008de:	b133      	cbz	r3, 80008ee <__sfp+0x2e>
 80008e0:	6836      	ldr	r6, [r6, #0]
 80008e2:	e7f7      	b.n	80008d4 <__sfp+0x14>
 80008e4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008e8:	b16d      	cbz	r5, 8000906 <__sfp+0x46>
 80008ea:	3468      	adds	r4, #104	; 0x68
 80008ec:	e7f4      	b.n	80008d8 <__sfp+0x18>
 80008ee:	2104      	movs	r1, #4
 80008f0:	4638      	mov	r0, r7
 80008f2:	f7ff ff9f 	bl	8000834 <__sfmoreglue>
 80008f6:	6030      	str	r0, [r6, #0]
 80008f8:	2800      	cmp	r0, #0
 80008fa:	d1f1      	bne.n	80008e0 <__sfp+0x20>
 80008fc:	230c      	movs	r3, #12
 80008fe:	603b      	str	r3, [r7, #0]
 8000900:	4604      	mov	r4, r0
 8000902:	4620      	mov	r0, r4
 8000904:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000906:	4b0b      	ldr	r3, [pc, #44]	; (8000934 <__sfp+0x74>)
 8000908:	6665      	str	r5, [r4, #100]	; 0x64
 800090a:	e9c4 5500 	strd	r5, r5, [r4]
 800090e:	60a5      	str	r5, [r4, #8]
 8000910:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000914:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000918:	2208      	movs	r2, #8
 800091a:	4629      	mov	r1, r5
 800091c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000920:	f7ff fef6 	bl	8000710 <memset>
 8000924:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000928:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800092c:	e7e9      	b.n	8000902 <__sfp+0x42>
 800092e:	bf00      	nop
 8000930:	08001668 	.word	0x08001668
 8000934:	ffff0001 	.word	0xffff0001

08000938 <_fwalk_reent>:
 8000938:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800093c:	4680      	mov	r8, r0
 800093e:	4689      	mov	r9, r1
 8000940:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000944:	2600      	movs	r6, #0
 8000946:	b914      	cbnz	r4, 800094e <_fwalk_reent+0x16>
 8000948:	4630      	mov	r0, r6
 800094a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800094e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000952:	3f01      	subs	r7, #1
 8000954:	d501      	bpl.n	800095a <_fwalk_reent+0x22>
 8000956:	6824      	ldr	r4, [r4, #0]
 8000958:	e7f5      	b.n	8000946 <_fwalk_reent+0xe>
 800095a:	89ab      	ldrh	r3, [r5, #12]
 800095c:	2b01      	cmp	r3, #1
 800095e:	d907      	bls.n	8000970 <_fwalk_reent+0x38>
 8000960:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000964:	3301      	adds	r3, #1
 8000966:	d003      	beq.n	8000970 <_fwalk_reent+0x38>
 8000968:	4629      	mov	r1, r5
 800096a:	4640      	mov	r0, r8
 800096c:	47c8      	blx	r9
 800096e:	4306      	orrs	r6, r0
 8000970:	3568      	adds	r5, #104	; 0x68
 8000972:	e7ee      	b.n	8000952 <_fwalk_reent+0x1a>

08000974 <malloc>:
 8000974:	4b02      	ldr	r3, [pc, #8]	; (8000980 <malloc+0xc>)
 8000976:	4601      	mov	r1, r0
 8000978:	6818      	ldr	r0, [r3, #0]
 800097a:	f000 b851 	b.w	8000a20 <_malloc_r>
 800097e:	bf00      	nop
 8000980:	20000048 	.word	0x20000048

08000984 <_free_r>:
 8000984:	b538      	push	{r3, r4, r5, lr}
 8000986:	4605      	mov	r5, r0
 8000988:	2900      	cmp	r1, #0
 800098a:	d045      	beq.n	8000a18 <_free_r+0x94>
 800098c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000990:	1f0c      	subs	r4, r1, #4
 8000992:	2b00      	cmp	r3, #0
 8000994:	bfb8      	it	lt
 8000996:	18e4      	addlt	r4, r4, r3
 8000998:	f000 fdf6 	bl	8001588 <__malloc_lock>
 800099c:	4a1f      	ldr	r2, [pc, #124]	; (8000a1c <_free_r+0x98>)
 800099e:	6813      	ldr	r3, [r2, #0]
 80009a0:	4610      	mov	r0, r2
 80009a2:	b933      	cbnz	r3, 80009b2 <_free_r+0x2e>
 80009a4:	6063      	str	r3, [r4, #4]
 80009a6:	6014      	str	r4, [r2, #0]
 80009a8:	4628      	mov	r0, r5
 80009aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009ae:	f000 bdec 	b.w	800158a <__malloc_unlock>
 80009b2:	42a3      	cmp	r3, r4
 80009b4:	d90c      	bls.n	80009d0 <_free_r+0x4c>
 80009b6:	6821      	ldr	r1, [r4, #0]
 80009b8:	1862      	adds	r2, r4, r1
 80009ba:	4293      	cmp	r3, r2
 80009bc:	bf04      	itt	eq
 80009be:	681a      	ldreq	r2, [r3, #0]
 80009c0:	685b      	ldreq	r3, [r3, #4]
 80009c2:	6063      	str	r3, [r4, #4]
 80009c4:	bf04      	itt	eq
 80009c6:	1852      	addeq	r2, r2, r1
 80009c8:	6022      	streq	r2, [r4, #0]
 80009ca:	6004      	str	r4, [r0, #0]
 80009cc:	e7ec      	b.n	80009a8 <_free_r+0x24>
 80009ce:	4613      	mov	r3, r2
 80009d0:	685a      	ldr	r2, [r3, #4]
 80009d2:	b10a      	cbz	r2, 80009d8 <_free_r+0x54>
 80009d4:	42a2      	cmp	r2, r4
 80009d6:	d9fa      	bls.n	80009ce <_free_r+0x4a>
 80009d8:	6819      	ldr	r1, [r3, #0]
 80009da:	1858      	adds	r0, r3, r1
 80009dc:	42a0      	cmp	r0, r4
 80009de:	d10b      	bne.n	80009f8 <_free_r+0x74>
 80009e0:	6820      	ldr	r0, [r4, #0]
 80009e2:	4401      	add	r1, r0
 80009e4:	1858      	adds	r0, r3, r1
 80009e6:	4282      	cmp	r2, r0
 80009e8:	6019      	str	r1, [r3, #0]
 80009ea:	d1dd      	bne.n	80009a8 <_free_r+0x24>
 80009ec:	6810      	ldr	r0, [r2, #0]
 80009ee:	6852      	ldr	r2, [r2, #4]
 80009f0:	605a      	str	r2, [r3, #4]
 80009f2:	4401      	add	r1, r0
 80009f4:	6019      	str	r1, [r3, #0]
 80009f6:	e7d7      	b.n	80009a8 <_free_r+0x24>
 80009f8:	d902      	bls.n	8000a00 <_free_r+0x7c>
 80009fa:	230c      	movs	r3, #12
 80009fc:	602b      	str	r3, [r5, #0]
 80009fe:	e7d3      	b.n	80009a8 <_free_r+0x24>
 8000a00:	6820      	ldr	r0, [r4, #0]
 8000a02:	1821      	adds	r1, r4, r0
 8000a04:	428a      	cmp	r2, r1
 8000a06:	bf04      	itt	eq
 8000a08:	6811      	ldreq	r1, [r2, #0]
 8000a0a:	6852      	ldreq	r2, [r2, #4]
 8000a0c:	6062      	str	r2, [r4, #4]
 8000a0e:	bf04      	itt	eq
 8000a10:	1809      	addeq	r1, r1, r0
 8000a12:	6021      	streq	r1, [r4, #0]
 8000a14:	605c      	str	r4, [r3, #4]
 8000a16:	e7c7      	b.n	80009a8 <_free_r+0x24>
 8000a18:	bd38      	pop	{r3, r4, r5, pc}
 8000a1a:	bf00      	nop
 8000a1c:	200000cc 	.word	0x200000cc

08000a20 <_malloc_r>:
 8000a20:	b570      	push	{r4, r5, r6, lr}
 8000a22:	1ccd      	adds	r5, r1, #3
 8000a24:	f025 0503 	bic.w	r5, r5, #3
 8000a28:	3508      	adds	r5, #8
 8000a2a:	2d0c      	cmp	r5, #12
 8000a2c:	bf38      	it	cc
 8000a2e:	250c      	movcc	r5, #12
 8000a30:	2d00      	cmp	r5, #0
 8000a32:	4606      	mov	r6, r0
 8000a34:	db01      	blt.n	8000a3a <_malloc_r+0x1a>
 8000a36:	42a9      	cmp	r1, r5
 8000a38:	d903      	bls.n	8000a42 <_malloc_r+0x22>
 8000a3a:	230c      	movs	r3, #12
 8000a3c:	6033      	str	r3, [r6, #0]
 8000a3e:	2000      	movs	r0, #0
 8000a40:	bd70      	pop	{r4, r5, r6, pc}
 8000a42:	f000 fda1 	bl	8001588 <__malloc_lock>
 8000a46:	4a21      	ldr	r2, [pc, #132]	; (8000acc <_malloc_r+0xac>)
 8000a48:	6814      	ldr	r4, [r2, #0]
 8000a4a:	4621      	mov	r1, r4
 8000a4c:	b991      	cbnz	r1, 8000a74 <_malloc_r+0x54>
 8000a4e:	4c20      	ldr	r4, [pc, #128]	; (8000ad0 <_malloc_r+0xb0>)
 8000a50:	6823      	ldr	r3, [r4, #0]
 8000a52:	b91b      	cbnz	r3, 8000a5c <_malloc_r+0x3c>
 8000a54:	4630      	mov	r0, r6
 8000a56:	f000 fb3b 	bl	80010d0 <_sbrk_r>
 8000a5a:	6020      	str	r0, [r4, #0]
 8000a5c:	4629      	mov	r1, r5
 8000a5e:	4630      	mov	r0, r6
 8000a60:	f000 fb36 	bl	80010d0 <_sbrk_r>
 8000a64:	1c43      	adds	r3, r0, #1
 8000a66:	d124      	bne.n	8000ab2 <_malloc_r+0x92>
 8000a68:	230c      	movs	r3, #12
 8000a6a:	6033      	str	r3, [r6, #0]
 8000a6c:	4630      	mov	r0, r6
 8000a6e:	f000 fd8c 	bl	800158a <__malloc_unlock>
 8000a72:	e7e4      	b.n	8000a3e <_malloc_r+0x1e>
 8000a74:	680b      	ldr	r3, [r1, #0]
 8000a76:	1b5b      	subs	r3, r3, r5
 8000a78:	d418      	bmi.n	8000aac <_malloc_r+0x8c>
 8000a7a:	2b0b      	cmp	r3, #11
 8000a7c:	d90f      	bls.n	8000a9e <_malloc_r+0x7e>
 8000a7e:	600b      	str	r3, [r1, #0]
 8000a80:	50cd      	str	r5, [r1, r3]
 8000a82:	18cc      	adds	r4, r1, r3
 8000a84:	4630      	mov	r0, r6
 8000a86:	f000 fd80 	bl	800158a <__malloc_unlock>
 8000a8a:	f104 000b 	add.w	r0, r4, #11
 8000a8e:	1d23      	adds	r3, r4, #4
 8000a90:	f020 0007 	bic.w	r0, r0, #7
 8000a94:	1ac3      	subs	r3, r0, r3
 8000a96:	d0d3      	beq.n	8000a40 <_malloc_r+0x20>
 8000a98:	425a      	negs	r2, r3
 8000a9a:	50e2      	str	r2, [r4, r3]
 8000a9c:	e7d0      	b.n	8000a40 <_malloc_r+0x20>
 8000a9e:	428c      	cmp	r4, r1
 8000aa0:	684b      	ldr	r3, [r1, #4]
 8000aa2:	bf16      	itet	ne
 8000aa4:	6063      	strne	r3, [r4, #4]
 8000aa6:	6013      	streq	r3, [r2, #0]
 8000aa8:	460c      	movne	r4, r1
 8000aaa:	e7eb      	b.n	8000a84 <_malloc_r+0x64>
 8000aac:	460c      	mov	r4, r1
 8000aae:	6849      	ldr	r1, [r1, #4]
 8000ab0:	e7cc      	b.n	8000a4c <_malloc_r+0x2c>
 8000ab2:	1cc4      	adds	r4, r0, #3
 8000ab4:	f024 0403 	bic.w	r4, r4, #3
 8000ab8:	42a0      	cmp	r0, r4
 8000aba:	d005      	beq.n	8000ac8 <_malloc_r+0xa8>
 8000abc:	1a21      	subs	r1, r4, r0
 8000abe:	4630      	mov	r0, r6
 8000ac0:	f000 fb06 	bl	80010d0 <_sbrk_r>
 8000ac4:	3001      	adds	r0, #1
 8000ac6:	d0cf      	beq.n	8000a68 <_malloc_r+0x48>
 8000ac8:	6025      	str	r5, [r4, #0]
 8000aca:	e7db      	b.n	8000a84 <_malloc_r+0x64>
 8000acc:	200000cc 	.word	0x200000cc
 8000ad0:	200000d0 	.word	0x200000d0

08000ad4 <__sfputc_r>:
 8000ad4:	6893      	ldr	r3, [r2, #8]
 8000ad6:	3b01      	subs	r3, #1
 8000ad8:	2b00      	cmp	r3, #0
 8000ada:	b410      	push	{r4}
 8000adc:	6093      	str	r3, [r2, #8]
 8000ade:	da08      	bge.n	8000af2 <__sfputc_r+0x1e>
 8000ae0:	6994      	ldr	r4, [r2, #24]
 8000ae2:	42a3      	cmp	r3, r4
 8000ae4:	db01      	blt.n	8000aea <__sfputc_r+0x16>
 8000ae6:	290a      	cmp	r1, #10
 8000ae8:	d103      	bne.n	8000af2 <__sfputc_r+0x1e>
 8000aea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000aee:	f000 bb43 	b.w	8001178 <__swbuf_r>
 8000af2:	6813      	ldr	r3, [r2, #0]
 8000af4:	1c58      	adds	r0, r3, #1
 8000af6:	6010      	str	r0, [r2, #0]
 8000af8:	7019      	strb	r1, [r3, #0]
 8000afa:	4608      	mov	r0, r1
 8000afc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b00:	4770      	bx	lr

08000b02 <__sfputs_r>:
 8000b02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b04:	4606      	mov	r6, r0
 8000b06:	460f      	mov	r7, r1
 8000b08:	4614      	mov	r4, r2
 8000b0a:	18d5      	adds	r5, r2, r3
 8000b0c:	42ac      	cmp	r4, r5
 8000b0e:	d101      	bne.n	8000b14 <__sfputs_r+0x12>
 8000b10:	2000      	movs	r0, #0
 8000b12:	e007      	b.n	8000b24 <__sfputs_r+0x22>
 8000b14:	463a      	mov	r2, r7
 8000b16:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b1a:	4630      	mov	r0, r6
 8000b1c:	f7ff ffda 	bl	8000ad4 <__sfputc_r>
 8000b20:	1c43      	adds	r3, r0, #1
 8000b22:	d1f3      	bne.n	8000b0c <__sfputs_r+0xa>
 8000b24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000b28 <_vfiprintf_r>:
 8000b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000b2c:	460c      	mov	r4, r1
 8000b2e:	b09d      	sub	sp, #116	; 0x74
 8000b30:	4617      	mov	r7, r2
 8000b32:	461d      	mov	r5, r3
 8000b34:	4606      	mov	r6, r0
 8000b36:	b118      	cbz	r0, 8000b40 <_vfiprintf_r+0x18>
 8000b38:	6983      	ldr	r3, [r0, #24]
 8000b3a:	b90b      	cbnz	r3, 8000b40 <_vfiprintf_r+0x18>
 8000b3c:	f7ff fe90 	bl	8000860 <__sinit>
 8000b40:	4b7c      	ldr	r3, [pc, #496]	; (8000d34 <_vfiprintf_r+0x20c>)
 8000b42:	429c      	cmp	r4, r3
 8000b44:	d158      	bne.n	8000bf8 <_vfiprintf_r+0xd0>
 8000b46:	6874      	ldr	r4, [r6, #4]
 8000b48:	89a3      	ldrh	r3, [r4, #12]
 8000b4a:	0718      	lsls	r0, r3, #28
 8000b4c:	d55e      	bpl.n	8000c0c <_vfiprintf_r+0xe4>
 8000b4e:	6923      	ldr	r3, [r4, #16]
 8000b50:	2b00      	cmp	r3, #0
 8000b52:	d05b      	beq.n	8000c0c <_vfiprintf_r+0xe4>
 8000b54:	2300      	movs	r3, #0
 8000b56:	9309      	str	r3, [sp, #36]	; 0x24
 8000b58:	2320      	movs	r3, #32
 8000b5a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b5e:	2330      	movs	r3, #48	; 0x30
 8000b60:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b64:	9503      	str	r5, [sp, #12]
 8000b66:	f04f 0b01 	mov.w	fp, #1
 8000b6a:	46b8      	mov	r8, r7
 8000b6c:	4645      	mov	r5, r8
 8000b6e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000b72:	b10b      	cbz	r3, 8000b78 <_vfiprintf_r+0x50>
 8000b74:	2b25      	cmp	r3, #37	; 0x25
 8000b76:	d154      	bne.n	8000c22 <_vfiprintf_r+0xfa>
 8000b78:	ebb8 0a07 	subs.w	sl, r8, r7
 8000b7c:	d00b      	beq.n	8000b96 <_vfiprintf_r+0x6e>
 8000b7e:	4653      	mov	r3, sl
 8000b80:	463a      	mov	r2, r7
 8000b82:	4621      	mov	r1, r4
 8000b84:	4630      	mov	r0, r6
 8000b86:	f7ff ffbc 	bl	8000b02 <__sfputs_r>
 8000b8a:	3001      	adds	r0, #1
 8000b8c:	f000 80c2 	beq.w	8000d14 <_vfiprintf_r+0x1ec>
 8000b90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b92:	4453      	add	r3, sl
 8000b94:	9309      	str	r3, [sp, #36]	; 0x24
 8000b96:	f898 3000 	ldrb.w	r3, [r8]
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	f000 80ba 	beq.w	8000d14 <_vfiprintf_r+0x1ec>
 8000ba0:	2300      	movs	r3, #0
 8000ba2:	f04f 32ff 	mov.w	r2, #4294967295
 8000ba6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000baa:	9304      	str	r3, [sp, #16]
 8000bac:	9307      	str	r3, [sp, #28]
 8000bae:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000bb2:	931a      	str	r3, [sp, #104]	; 0x68
 8000bb4:	46a8      	mov	r8, r5
 8000bb6:	2205      	movs	r2, #5
 8000bb8:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000bbc:	485e      	ldr	r0, [pc, #376]	; (8000d38 <_vfiprintf_r+0x210>)
 8000bbe:	f7ff fb3f 	bl	8000240 <memchr>
 8000bc2:	9b04      	ldr	r3, [sp, #16]
 8000bc4:	bb78      	cbnz	r0, 8000c26 <_vfiprintf_r+0xfe>
 8000bc6:	06d9      	lsls	r1, r3, #27
 8000bc8:	bf44      	itt	mi
 8000bca:	2220      	movmi	r2, #32
 8000bcc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000bd0:	071a      	lsls	r2, r3, #28
 8000bd2:	bf44      	itt	mi
 8000bd4:	222b      	movmi	r2, #43	; 0x2b
 8000bd6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000bda:	782a      	ldrb	r2, [r5, #0]
 8000bdc:	2a2a      	cmp	r2, #42	; 0x2a
 8000bde:	d02a      	beq.n	8000c36 <_vfiprintf_r+0x10e>
 8000be0:	9a07      	ldr	r2, [sp, #28]
 8000be2:	46a8      	mov	r8, r5
 8000be4:	2000      	movs	r0, #0
 8000be6:	250a      	movs	r5, #10
 8000be8:	4641      	mov	r1, r8
 8000bea:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bee:	3b30      	subs	r3, #48	; 0x30
 8000bf0:	2b09      	cmp	r3, #9
 8000bf2:	d969      	bls.n	8000cc8 <_vfiprintf_r+0x1a0>
 8000bf4:	b360      	cbz	r0, 8000c50 <_vfiprintf_r+0x128>
 8000bf6:	e024      	b.n	8000c42 <_vfiprintf_r+0x11a>
 8000bf8:	4b50      	ldr	r3, [pc, #320]	; (8000d3c <_vfiprintf_r+0x214>)
 8000bfa:	429c      	cmp	r4, r3
 8000bfc:	d101      	bne.n	8000c02 <_vfiprintf_r+0xda>
 8000bfe:	68b4      	ldr	r4, [r6, #8]
 8000c00:	e7a2      	b.n	8000b48 <_vfiprintf_r+0x20>
 8000c02:	4b4f      	ldr	r3, [pc, #316]	; (8000d40 <_vfiprintf_r+0x218>)
 8000c04:	429c      	cmp	r4, r3
 8000c06:	bf08      	it	eq
 8000c08:	68f4      	ldreq	r4, [r6, #12]
 8000c0a:	e79d      	b.n	8000b48 <_vfiprintf_r+0x20>
 8000c0c:	4621      	mov	r1, r4
 8000c0e:	4630      	mov	r0, r6
 8000c10:	f000 fb16 	bl	8001240 <__swsetup_r>
 8000c14:	2800      	cmp	r0, #0
 8000c16:	d09d      	beq.n	8000b54 <_vfiprintf_r+0x2c>
 8000c18:	f04f 30ff 	mov.w	r0, #4294967295
 8000c1c:	b01d      	add	sp, #116	; 0x74
 8000c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c22:	46a8      	mov	r8, r5
 8000c24:	e7a2      	b.n	8000b6c <_vfiprintf_r+0x44>
 8000c26:	4a44      	ldr	r2, [pc, #272]	; (8000d38 <_vfiprintf_r+0x210>)
 8000c28:	1a80      	subs	r0, r0, r2
 8000c2a:	fa0b f000 	lsl.w	r0, fp, r0
 8000c2e:	4318      	orrs	r0, r3
 8000c30:	9004      	str	r0, [sp, #16]
 8000c32:	4645      	mov	r5, r8
 8000c34:	e7be      	b.n	8000bb4 <_vfiprintf_r+0x8c>
 8000c36:	9a03      	ldr	r2, [sp, #12]
 8000c38:	1d11      	adds	r1, r2, #4
 8000c3a:	6812      	ldr	r2, [r2, #0]
 8000c3c:	9103      	str	r1, [sp, #12]
 8000c3e:	2a00      	cmp	r2, #0
 8000c40:	db01      	blt.n	8000c46 <_vfiprintf_r+0x11e>
 8000c42:	9207      	str	r2, [sp, #28]
 8000c44:	e004      	b.n	8000c50 <_vfiprintf_r+0x128>
 8000c46:	4252      	negs	r2, r2
 8000c48:	f043 0302 	orr.w	r3, r3, #2
 8000c4c:	9207      	str	r2, [sp, #28]
 8000c4e:	9304      	str	r3, [sp, #16]
 8000c50:	f898 3000 	ldrb.w	r3, [r8]
 8000c54:	2b2e      	cmp	r3, #46	; 0x2e
 8000c56:	d10e      	bne.n	8000c76 <_vfiprintf_r+0x14e>
 8000c58:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000c5c:	2b2a      	cmp	r3, #42	; 0x2a
 8000c5e:	d138      	bne.n	8000cd2 <_vfiprintf_r+0x1aa>
 8000c60:	9b03      	ldr	r3, [sp, #12]
 8000c62:	1d1a      	adds	r2, r3, #4
 8000c64:	681b      	ldr	r3, [r3, #0]
 8000c66:	9203      	str	r2, [sp, #12]
 8000c68:	2b00      	cmp	r3, #0
 8000c6a:	bfb8      	it	lt
 8000c6c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c70:	f108 0802 	add.w	r8, r8, #2
 8000c74:	9305      	str	r3, [sp, #20]
 8000c76:	4d33      	ldr	r5, [pc, #204]	; (8000d44 <_vfiprintf_r+0x21c>)
 8000c78:	f898 1000 	ldrb.w	r1, [r8]
 8000c7c:	2203      	movs	r2, #3
 8000c7e:	4628      	mov	r0, r5
 8000c80:	f7ff fade 	bl	8000240 <memchr>
 8000c84:	b140      	cbz	r0, 8000c98 <_vfiprintf_r+0x170>
 8000c86:	2340      	movs	r3, #64	; 0x40
 8000c88:	1b40      	subs	r0, r0, r5
 8000c8a:	fa03 f000 	lsl.w	r0, r3, r0
 8000c8e:	9b04      	ldr	r3, [sp, #16]
 8000c90:	4303      	orrs	r3, r0
 8000c92:	f108 0801 	add.w	r8, r8, #1
 8000c96:	9304      	str	r3, [sp, #16]
 8000c98:	f898 1000 	ldrb.w	r1, [r8]
 8000c9c:	482a      	ldr	r0, [pc, #168]	; (8000d48 <_vfiprintf_r+0x220>)
 8000c9e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000ca2:	2206      	movs	r2, #6
 8000ca4:	f108 0701 	add.w	r7, r8, #1
 8000ca8:	f7ff faca 	bl	8000240 <memchr>
 8000cac:	2800      	cmp	r0, #0
 8000cae:	d037      	beq.n	8000d20 <_vfiprintf_r+0x1f8>
 8000cb0:	4b26      	ldr	r3, [pc, #152]	; (8000d4c <_vfiprintf_r+0x224>)
 8000cb2:	bb1b      	cbnz	r3, 8000cfc <_vfiprintf_r+0x1d4>
 8000cb4:	9b03      	ldr	r3, [sp, #12]
 8000cb6:	3307      	adds	r3, #7
 8000cb8:	f023 0307 	bic.w	r3, r3, #7
 8000cbc:	3308      	adds	r3, #8
 8000cbe:	9303      	str	r3, [sp, #12]
 8000cc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000cc2:	444b      	add	r3, r9
 8000cc4:	9309      	str	r3, [sp, #36]	; 0x24
 8000cc6:	e750      	b.n	8000b6a <_vfiprintf_r+0x42>
 8000cc8:	fb05 3202 	mla	r2, r5, r2, r3
 8000ccc:	2001      	movs	r0, #1
 8000cce:	4688      	mov	r8, r1
 8000cd0:	e78a      	b.n	8000be8 <_vfiprintf_r+0xc0>
 8000cd2:	2300      	movs	r3, #0
 8000cd4:	f108 0801 	add.w	r8, r8, #1
 8000cd8:	9305      	str	r3, [sp, #20]
 8000cda:	4619      	mov	r1, r3
 8000cdc:	250a      	movs	r5, #10
 8000cde:	4640      	mov	r0, r8
 8000ce0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ce4:	3a30      	subs	r2, #48	; 0x30
 8000ce6:	2a09      	cmp	r2, #9
 8000ce8:	d903      	bls.n	8000cf2 <_vfiprintf_r+0x1ca>
 8000cea:	2b00      	cmp	r3, #0
 8000cec:	d0c3      	beq.n	8000c76 <_vfiprintf_r+0x14e>
 8000cee:	9105      	str	r1, [sp, #20]
 8000cf0:	e7c1      	b.n	8000c76 <_vfiprintf_r+0x14e>
 8000cf2:	fb05 2101 	mla	r1, r5, r1, r2
 8000cf6:	2301      	movs	r3, #1
 8000cf8:	4680      	mov	r8, r0
 8000cfa:	e7f0      	b.n	8000cde <_vfiprintf_r+0x1b6>
 8000cfc:	ab03      	add	r3, sp, #12
 8000cfe:	9300      	str	r3, [sp, #0]
 8000d00:	4622      	mov	r2, r4
 8000d02:	4b13      	ldr	r3, [pc, #76]	; (8000d50 <_vfiprintf_r+0x228>)
 8000d04:	a904      	add	r1, sp, #16
 8000d06:	4630      	mov	r0, r6
 8000d08:	f3af 8000 	nop.w
 8000d0c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000d10:	4681      	mov	r9, r0
 8000d12:	d1d5      	bne.n	8000cc0 <_vfiprintf_r+0x198>
 8000d14:	89a3      	ldrh	r3, [r4, #12]
 8000d16:	065b      	lsls	r3, r3, #25
 8000d18:	f53f af7e 	bmi.w	8000c18 <_vfiprintf_r+0xf0>
 8000d1c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000d1e:	e77d      	b.n	8000c1c <_vfiprintf_r+0xf4>
 8000d20:	ab03      	add	r3, sp, #12
 8000d22:	9300      	str	r3, [sp, #0]
 8000d24:	4622      	mov	r2, r4
 8000d26:	4b0a      	ldr	r3, [pc, #40]	; (8000d50 <_vfiprintf_r+0x228>)
 8000d28:	a904      	add	r1, sp, #16
 8000d2a:	4630      	mov	r0, r6
 8000d2c:	f000 f888 	bl	8000e40 <_printf_i>
 8000d30:	e7ec      	b.n	8000d0c <_vfiprintf_r+0x1e4>
 8000d32:	bf00      	nop
 8000d34:	0800168c 	.word	0x0800168c
 8000d38:	080016cc 	.word	0x080016cc
 8000d3c:	080016ac 	.word	0x080016ac
 8000d40:	0800166c 	.word	0x0800166c
 8000d44:	080016d2 	.word	0x080016d2
 8000d48:	080016d6 	.word	0x080016d6
 8000d4c:	00000000 	.word	0x00000000
 8000d50:	08000b03 	.word	0x08000b03

08000d54 <_printf_common>:
 8000d54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d58:	4691      	mov	r9, r2
 8000d5a:	461f      	mov	r7, r3
 8000d5c:	688a      	ldr	r2, [r1, #8]
 8000d5e:	690b      	ldr	r3, [r1, #16]
 8000d60:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d64:	4293      	cmp	r3, r2
 8000d66:	bfb8      	it	lt
 8000d68:	4613      	movlt	r3, r2
 8000d6a:	f8c9 3000 	str.w	r3, [r9]
 8000d6e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d72:	4606      	mov	r6, r0
 8000d74:	460c      	mov	r4, r1
 8000d76:	b112      	cbz	r2, 8000d7e <_printf_common+0x2a>
 8000d78:	3301      	adds	r3, #1
 8000d7a:	f8c9 3000 	str.w	r3, [r9]
 8000d7e:	6823      	ldr	r3, [r4, #0]
 8000d80:	0699      	lsls	r1, r3, #26
 8000d82:	bf42      	ittt	mi
 8000d84:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000d88:	3302      	addmi	r3, #2
 8000d8a:	f8c9 3000 	strmi.w	r3, [r9]
 8000d8e:	6825      	ldr	r5, [r4, #0]
 8000d90:	f015 0506 	ands.w	r5, r5, #6
 8000d94:	d107      	bne.n	8000da6 <_printf_common+0x52>
 8000d96:	f104 0a19 	add.w	sl, r4, #25
 8000d9a:	68e3      	ldr	r3, [r4, #12]
 8000d9c:	f8d9 2000 	ldr.w	r2, [r9]
 8000da0:	1a9b      	subs	r3, r3, r2
 8000da2:	42ab      	cmp	r3, r5
 8000da4:	dc28      	bgt.n	8000df8 <_printf_common+0xa4>
 8000da6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000daa:	6822      	ldr	r2, [r4, #0]
 8000dac:	3300      	adds	r3, #0
 8000dae:	bf18      	it	ne
 8000db0:	2301      	movne	r3, #1
 8000db2:	0692      	lsls	r2, r2, #26
 8000db4:	d42d      	bmi.n	8000e12 <_printf_common+0xbe>
 8000db6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000dba:	4639      	mov	r1, r7
 8000dbc:	4630      	mov	r0, r6
 8000dbe:	47c0      	blx	r8
 8000dc0:	3001      	adds	r0, #1
 8000dc2:	d020      	beq.n	8000e06 <_printf_common+0xb2>
 8000dc4:	6823      	ldr	r3, [r4, #0]
 8000dc6:	68e5      	ldr	r5, [r4, #12]
 8000dc8:	f8d9 2000 	ldr.w	r2, [r9]
 8000dcc:	f003 0306 	and.w	r3, r3, #6
 8000dd0:	2b04      	cmp	r3, #4
 8000dd2:	bf08      	it	eq
 8000dd4:	1aad      	subeq	r5, r5, r2
 8000dd6:	68a3      	ldr	r3, [r4, #8]
 8000dd8:	6922      	ldr	r2, [r4, #16]
 8000dda:	bf0c      	ite	eq
 8000ddc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000de0:	2500      	movne	r5, #0
 8000de2:	4293      	cmp	r3, r2
 8000de4:	bfc4      	itt	gt
 8000de6:	1a9b      	subgt	r3, r3, r2
 8000de8:	18ed      	addgt	r5, r5, r3
 8000dea:	f04f 0900 	mov.w	r9, #0
 8000dee:	341a      	adds	r4, #26
 8000df0:	454d      	cmp	r5, r9
 8000df2:	d11a      	bne.n	8000e2a <_printf_common+0xd6>
 8000df4:	2000      	movs	r0, #0
 8000df6:	e008      	b.n	8000e0a <_printf_common+0xb6>
 8000df8:	2301      	movs	r3, #1
 8000dfa:	4652      	mov	r2, sl
 8000dfc:	4639      	mov	r1, r7
 8000dfe:	4630      	mov	r0, r6
 8000e00:	47c0      	blx	r8
 8000e02:	3001      	adds	r0, #1
 8000e04:	d103      	bne.n	8000e0e <_printf_common+0xba>
 8000e06:	f04f 30ff 	mov.w	r0, #4294967295
 8000e0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0e:	3501      	adds	r5, #1
 8000e10:	e7c3      	b.n	8000d9a <_printf_common+0x46>
 8000e12:	18e1      	adds	r1, r4, r3
 8000e14:	1c5a      	adds	r2, r3, #1
 8000e16:	2030      	movs	r0, #48	; 0x30
 8000e18:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000e1c:	4422      	add	r2, r4
 8000e1e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000e22:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000e26:	3302      	adds	r3, #2
 8000e28:	e7c5      	b.n	8000db6 <_printf_common+0x62>
 8000e2a:	2301      	movs	r3, #1
 8000e2c:	4622      	mov	r2, r4
 8000e2e:	4639      	mov	r1, r7
 8000e30:	4630      	mov	r0, r6
 8000e32:	47c0      	blx	r8
 8000e34:	3001      	adds	r0, #1
 8000e36:	d0e6      	beq.n	8000e06 <_printf_common+0xb2>
 8000e38:	f109 0901 	add.w	r9, r9, #1
 8000e3c:	e7d8      	b.n	8000df0 <_printf_common+0x9c>
	...

08000e40 <_printf_i>:
 8000e40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000e44:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000e48:	460c      	mov	r4, r1
 8000e4a:	7e09      	ldrb	r1, [r1, #24]
 8000e4c:	b085      	sub	sp, #20
 8000e4e:	296e      	cmp	r1, #110	; 0x6e
 8000e50:	4617      	mov	r7, r2
 8000e52:	4606      	mov	r6, r0
 8000e54:	4698      	mov	r8, r3
 8000e56:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000e58:	f000 80b3 	beq.w	8000fc2 <_printf_i+0x182>
 8000e5c:	d822      	bhi.n	8000ea4 <_printf_i+0x64>
 8000e5e:	2963      	cmp	r1, #99	; 0x63
 8000e60:	d036      	beq.n	8000ed0 <_printf_i+0x90>
 8000e62:	d80a      	bhi.n	8000e7a <_printf_i+0x3a>
 8000e64:	2900      	cmp	r1, #0
 8000e66:	f000 80b9 	beq.w	8000fdc <_printf_i+0x19c>
 8000e6a:	2958      	cmp	r1, #88	; 0x58
 8000e6c:	f000 8083 	beq.w	8000f76 <_printf_i+0x136>
 8000e70:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e74:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000e78:	e032      	b.n	8000ee0 <_printf_i+0xa0>
 8000e7a:	2964      	cmp	r1, #100	; 0x64
 8000e7c:	d001      	beq.n	8000e82 <_printf_i+0x42>
 8000e7e:	2969      	cmp	r1, #105	; 0x69
 8000e80:	d1f6      	bne.n	8000e70 <_printf_i+0x30>
 8000e82:	6820      	ldr	r0, [r4, #0]
 8000e84:	6813      	ldr	r3, [r2, #0]
 8000e86:	0605      	lsls	r5, r0, #24
 8000e88:	f103 0104 	add.w	r1, r3, #4
 8000e8c:	d52a      	bpl.n	8000ee4 <_printf_i+0xa4>
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	6011      	str	r1, [r2, #0]
 8000e92:	2b00      	cmp	r3, #0
 8000e94:	da03      	bge.n	8000e9e <_printf_i+0x5e>
 8000e96:	222d      	movs	r2, #45	; 0x2d
 8000e98:	425b      	negs	r3, r3
 8000e9a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000e9e:	486f      	ldr	r0, [pc, #444]	; (800105c <_printf_i+0x21c>)
 8000ea0:	220a      	movs	r2, #10
 8000ea2:	e039      	b.n	8000f18 <_printf_i+0xd8>
 8000ea4:	2973      	cmp	r1, #115	; 0x73
 8000ea6:	f000 809d 	beq.w	8000fe4 <_printf_i+0x1a4>
 8000eaa:	d808      	bhi.n	8000ebe <_printf_i+0x7e>
 8000eac:	296f      	cmp	r1, #111	; 0x6f
 8000eae:	d020      	beq.n	8000ef2 <_printf_i+0xb2>
 8000eb0:	2970      	cmp	r1, #112	; 0x70
 8000eb2:	d1dd      	bne.n	8000e70 <_printf_i+0x30>
 8000eb4:	6823      	ldr	r3, [r4, #0]
 8000eb6:	f043 0320 	orr.w	r3, r3, #32
 8000eba:	6023      	str	r3, [r4, #0]
 8000ebc:	e003      	b.n	8000ec6 <_printf_i+0x86>
 8000ebe:	2975      	cmp	r1, #117	; 0x75
 8000ec0:	d017      	beq.n	8000ef2 <_printf_i+0xb2>
 8000ec2:	2978      	cmp	r1, #120	; 0x78
 8000ec4:	d1d4      	bne.n	8000e70 <_printf_i+0x30>
 8000ec6:	2378      	movs	r3, #120	; 0x78
 8000ec8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000ecc:	4864      	ldr	r0, [pc, #400]	; (8001060 <_printf_i+0x220>)
 8000ece:	e055      	b.n	8000f7c <_printf_i+0x13c>
 8000ed0:	6813      	ldr	r3, [r2, #0]
 8000ed2:	1d19      	adds	r1, r3, #4
 8000ed4:	681b      	ldr	r3, [r3, #0]
 8000ed6:	6011      	str	r1, [r2, #0]
 8000ed8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000edc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ee0:	2301      	movs	r3, #1
 8000ee2:	e08c      	b.n	8000ffe <_printf_i+0x1be>
 8000ee4:	681b      	ldr	r3, [r3, #0]
 8000ee6:	6011      	str	r1, [r2, #0]
 8000ee8:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000eec:	bf18      	it	ne
 8000eee:	b21b      	sxthne	r3, r3
 8000ef0:	e7cf      	b.n	8000e92 <_printf_i+0x52>
 8000ef2:	6813      	ldr	r3, [r2, #0]
 8000ef4:	6825      	ldr	r5, [r4, #0]
 8000ef6:	1d18      	adds	r0, r3, #4
 8000ef8:	6010      	str	r0, [r2, #0]
 8000efa:	0628      	lsls	r0, r5, #24
 8000efc:	d501      	bpl.n	8000f02 <_printf_i+0xc2>
 8000efe:	681b      	ldr	r3, [r3, #0]
 8000f00:	e002      	b.n	8000f08 <_printf_i+0xc8>
 8000f02:	0668      	lsls	r0, r5, #25
 8000f04:	d5fb      	bpl.n	8000efe <_printf_i+0xbe>
 8000f06:	881b      	ldrh	r3, [r3, #0]
 8000f08:	4854      	ldr	r0, [pc, #336]	; (800105c <_printf_i+0x21c>)
 8000f0a:	296f      	cmp	r1, #111	; 0x6f
 8000f0c:	bf14      	ite	ne
 8000f0e:	220a      	movne	r2, #10
 8000f10:	2208      	moveq	r2, #8
 8000f12:	2100      	movs	r1, #0
 8000f14:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000f18:	6865      	ldr	r5, [r4, #4]
 8000f1a:	60a5      	str	r5, [r4, #8]
 8000f1c:	2d00      	cmp	r5, #0
 8000f1e:	f2c0 8095 	blt.w	800104c <_printf_i+0x20c>
 8000f22:	6821      	ldr	r1, [r4, #0]
 8000f24:	f021 0104 	bic.w	r1, r1, #4
 8000f28:	6021      	str	r1, [r4, #0]
 8000f2a:	2b00      	cmp	r3, #0
 8000f2c:	d13d      	bne.n	8000faa <_printf_i+0x16a>
 8000f2e:	2d00      	cmp	r5, #0
 8000f30:	f040 808e 	bne.w	8001050 <_printf_i+0x210>
 8000f34:	4665      	mov	r5, ip
 8000f36:	2a08      	cmp	r2, #8
 8000f38:	d10b      	bne.n	8000f52 <_printf_i+0x112>
 8000f3a:	6823      	ldr	r3, [r4, #0]
 8000f3c:	07db      	lsls	r3, r3, #31
 8000f3e:	d508      	bpl.n	8000f52 <_printf_i+0x112>
 8000f40:	6923      	ldr	r3, [r4, #16]
 8000f42:	6862      	ldr	r2, [r4, #4]
 8000f44:	429a      	cmp	r2, r3
 8000f46:	bfde      	ittt	le
 8000f48:	2330      	movle	r3, #48	; 0x30
 8000f4a:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f4e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000f52:	ebac 0305 	sub.w	r3, ip, r5
 8000f56:	6123      	str	r3, [r4, #16]
 8000f58:	f8cd 8000 	str.w	r8, [sp]
 8000f5c:	463b      	mov	r3, r7
 8000f5e:	aa03      	add	r2, sp, #12
 8000f60:	4621      	mov	r1, r4
 8000f62:	4630      	mov	r0, r6
 8000f64:	f7ff fef6 	bl	8000d54 <_printf_common>
 8000f68:	3001      	adds	r0, #1
 8000f6a:	d14d      	bne.n	8001008 <_printf_i+0x1c8>
 8000f6c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f70:	b005      	add	sp, #20
 8000f72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000f76:	4839      	ldr	r0, [pc, #228]	; (800105c <_printf_i+0x21c>)
 8000f78:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000f7c:	6813      	ldr	r3, [r2, #0]
 8000f7e:	6821      	ldr	r1, [r4, #0]
 8000f80:	1d1d      	adds	r5, r3, #4
 8000f82:	681b      	ldr	r3, [r3, #0]
 8000f84:	6015      	str	r5, [r2, #0]
 8000f86:	060a      	lsls	r2, r1, #24
 8000f88:	d50b      	bpl.n	8000fa2 <_printf_i+0x162>
 8000f8a:	07ca      	lsls	r2, r1, #31
 8000f8c:	bf44      	itt	mi
 8000f8e:	f041 0120 	orrmi.w	r1, r1, #32
 8000f92:	6021      	strmi	r1, [r4, #0]
 8000f94:	b91b      	cbnz	r3, 8000f9e <_printf_i+0x15e>
 8000f96:	6822      	ldr	r2, [r4, #0]
 8000f98:	f022 0220 	bic.w	r2, r2, #32
 8000f9c:	6022      	str	r2, [r4, #0]
 8000f9e:	2210      	movs	r2, #16
 8000fa0:	e7b7      	b.n	8000f12 <_printf_i+0xd2>
 8000fa2:	064d      	lsls	r5, r1, #25
 8000fa4:	bf48      	it	mi
 8000fa6:	b29b      	uxthmi	r3, r3
 8000fa8:	e7ef      	b.n	8000f8a <_printf_i+0x14a>
 8000faa:	4665      	mov	r5, ip
 8000fac:	fbb3 f1f2 	udiv	r1, r3, r2
 8000fb0:	fb02 3311 	mls	r3, r2, r1, r3
 8000fb4:	5cc3      	ldrb	r3, [r0, r3]
 8000fb6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000fba:	460b      	mov	r3, r1
 8000fbc:	2900      	cmp	r1, #0
 8000fbe:	d1f5      	bne.n	8000fac <_printf_i+0x16c>
 8000fc0:	e7b9      	b.n	8000f36 <_printf_i+0xf6>
 8000fc2:	6813      	ldr	r3, [r2, #0]
 8000fc4:	6825      	ldr	r5, [r4, #0]
 8000fc6:	6961      	ldr	r1, [r4, #20]
 8000fc8:	1d18      	adds	r0, r3, #4
 8000fca:	6010      	str	r0, [r2, #0]
 8000fcc:	0628      	lsls	r0, r5, #24
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	d501      	bpl.n	8000fd6 <_printf_i+0x196>
 8000fd2:	6019      	str	r1, [r3, #0]
 8000fd4:	e002      	b.n	8000fdc <_printf_i+0x19c>
 8000fd6:	066a      	lsls	r2, r5, #25
 8000fd8:	d5fb      	bpl.n	8000fd2 <_printf_i+0x192>
 8000fda:	8019      	strh	r1, [r3, #0]
 8000fdc:	2300      	movs	r3, #0
 8000fde:	6123      	str	r3, [r4, #16]
 8000fe0:	4665      	mov	r5, ip
 8000fe2:	e7b9      	b.n	8000f58 <_printf_i+0x118>
 8000fe4:	6813      	ldr	r3, [r2, #0]
 8000fe6:	1d19      	adds	r1, r3, #4
 8000fe8:	6011      	str	r1, [r2, #0]
 8000fea:	681d      	ldr	r5, [r3, #0]
 8000fec:	6862      	ldr	r2, [r4, #4]
 8000fee:	2100      	movs	r1, #0
 8000ff0:	4628      	mov	r0, r5
 8000ff2:	f7ff f925 	bl	8000240 <memchr>
 8000ff6:	b108      	cbz	r0, 8000ffc <_printf_i+0x1bc>
 8000ff8:	1b40      	subs	r0, r0, r5
 8000ffa:	6060      	str	r0, [r4, #4]
 8000ffc:	6863      	ldr	r3, [r4, #4]
 8000ffe:	6123      	str	r3, [r4, #16]
 8001000:	2300      	movs	r3, #0
 8001002:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001006:	e7a7      	b.n	8000f58 <_printf_i+0x118>
 8001008:	6923      	ldr	r3, [r4, #16]
 800100a:	462a      	mov	r2, r5
 800100c:	4639      	mov	r1, r7
 800100e:	4630      	mov	r0, r6
 8001010:	47c0      	blx	r8
 8001012:	3001      	adds	r0, #1
 8001014:	d0aa      	beq.n	8000f6c <_printf_i+0x12c>
 8001016:	6823      	ldr	r3, [r4, #0]
 8001018:	079b      	lsls	r3, r3, #30
 800101a:	d413      	bmi.n	8001044 <_printf_i+0x204>
 800101c:	68e0      	ldr	r0, [r4, #12]
 800101e:	9b03      	ldr	r3, [sp, #12]
 8001020:	4298      	cmp	r0, r3
 8001022:	bfb8      	it	lt
 8001024:	4618      	movlt	r0, r3
 8001026:	e7a3      	b.n	8000f70 <_printf_i+0x130>
 8001028:	2301      	movs	r3, #1
 800102a:	464a      	mov	r2, r9
 800102c:	4639      	mov	r1, r7
 800102e:	4630      	mov	r0, r6
 8001030:	47c0      	blx	r8
 8001032:	3001      	adds	r0, #1
 8001034:	d09a      	beq.n	8000f6c <_printf_i+0x12c>
 8001036:	3501      	adds	r5, #1
 8001038:	68e3      	ldr	r3, [r4, #12]
 800103a:	9a03      	ldr	r2, [sp, #12]
 800103c:	1a9b      	subs	r3, r3, r2
 800103e:	42ab      	cmp	r3, r5
 8001040:	dcf2      	bgt.n	8001028 <_printf_i+0x1e8>
 8001042:	e7eb      	b.n	800101c <_printf_i+0x1dc>
 8001044:	2500      	movs	r5, #0
 8001046:	f104 0919 	add.w	r9, r4, #25
 800104a:	e7f5      	b.n	8001038 <_printf_i+0x1f8>
 800104c:	2b00      	cmp	r3, #0
 800104e:	d1ac      	bne.n	8000faa <_printf_i+0x16a>
 8001050:	7803      	ldrb	r3, [r0, #0]
 8001052:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001056:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800105a:	e76c      	b.n	8000f36 <_printf_i+0xf6>
 800105c:	080016dd 	.word	0x080016dd
 8001060:	080016ee 	.word	0x080016ee

08001064 <_putc_r>:
 8001064:	b570      	push	{r4, r5, r6, lr}
 8001066:	460d      	mov	r5, r1
 8001068:	4614      	mov	r4, r2
 800106a:	4606      	mov	r6, r0
 800106c:	b118      	cbz	r0, 8001076 <_putc_r+0x12>
 800106e:	6983      	ldr	r3, [r0, #24]
 8001070:	b90b      	cbnz	r3, 8001076 <_putc_r+0x12>
 8001072:	f7ff fbf5 	bl	8000860 <__sinit>
 8001076:	4b13      	ldr	r3, [pc, #76]	; (80010c4 <_putc_r+0x60>)
 8001078:	429c      	cmp	r4, r3
 800107a:	d112      	bne.n	80010a2 <_putc_r+0x3e>
 800107c:	6874      	ldr	r4, [r6, #4]
 800107e:	68a3      	ldr	r3, [r4, #8]
 8001080:	3b01      	subs	r3, #1
 8001082:	2b00      	cmp	r3, #0
 8001084:	60a3      	str	r3, [r4, #8]
 8001086:	da16      	bge.n	80010b6 <_putc_r+0x52>
 8001088:	69a2      	ldr	r2, [r4, #24]
 800108a:	4293      	cmp	r3, r2
 800108c:	db02      	blt.n	8001094 <_putc_r+0x30>
 800108e:	b2eb      	uxtb	r3, r5
 8001090:	2b0a      	cmp	r3, #10
 8001092:	d110      	bne.n	80010b6 <_putc_r+0x52>
 8001094:	4622      	mov	r2, r4
 8001096:	4629      	mov	r1, r5
 8001098:	4630      	mov	r0, r6
 800109a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800109e:	f000 b86b 	b.w	8001178 <__swbuf_r>
 80010a2:	4b09      	ldr	r3, [pc, #36]	; (80010c8 <_putc_r+0x64>)
 80010a4:	429c      	cmp	r4, r3
 80010a6:	d101      	bne.n	80010ac <_putc_r+0x48>
 80010a8:	68b4      	ldr	r4, [r6, #8]
 80010aa:	e7e8      	b.n	800107e <_putc_r+0x1a>
 80010ac:	4b07      	ldr	r3, [pc, #28]	; (80010cc <_putc_r+0x68>)
 80010ae:	429c      	cmp	r4, r3
 80010b0:	bf08      	it	eq
 80010b2:	68f4      	ldreq	r4, [r6, #12]
 80010b4:	e7e3      	b.n	800107e <_putc_r+0x1a>
 80010b6:	6823      	ldr	r3, [r4, #0]
 80010b8:	1c5a      	adds	r2, r3, #1
 80010ba:	6022      	str	r2, [r4, #0]
 80010bc:	701d      	strb	r5, [r3, #0]
 80010be:	b2e8      	uxtb	r0, r5
 80010c0:	bd70      	pop	{r4, r5, r6, pc}
 80010c2:	bf00      	nop
 80010c4:	0800168c 	.word	0x0800168c
 80010c8:	080016ac 	.word	0x080016ac
 80010cc:	0800166c 	.word	0x0800166c

080010d0 <_sbrk_r>:
 80010d0:	b538      	push	{r3, r4, r5, lr}
 80010d2:	4c06      	ldr	r4, [pc, #24]	; (80010ec <_sbrk_r+0x1c>)
 80010d4:	2300      	movs	r3, #0
 80010d6:	4605      	mov	r5, r0
 80010d8:	4608      	mov	r0, r1
 80010da:	6023      	str	r3, [r4, #0]
 80010dc:	f7ff fa98 	bl	8000610 <_sbrk>
 80010e0:	1c43      	adds	r3, r0, #1
 80010e2:	d102      	bne.n	80010ea <_sbrk_r+0x1a>
 80010e4:	6823      	ldr	r3, [r4, #0]
 80010e6:	b103      	cbz	r3, 80010ea <_sbrk_r+0x1a>
 80010e8:	602b      	str	r3, [r5, #0]
 80010ea:	bd38      	pop	{r3, r4, r5, pc}
 80010ec:	200000d4 	.word	0x200000d4

080010f0 <__sread>:
 80010f0:	b510      	push	{r4, lr}
 80010f2:	460c      	mov	r4, r1
 80010f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010f8:	f000 fa48 	bl	800158c <_read_r>
 80010fc:	2800      	cmp	r0, #0
 80010fe:	bfab      	itete	ge
 8001100:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001102:	89a3      	ldrhlt	r3, [r4, #12]
 8001104:	181b      	addge	r3, r3, r0
 8001106:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800110a:	bfac      	ite	ge
 800110c:	6563      	strge	r3, [r4, #84]	; 0x54
 800110e:	81a3      	strhlt	r3, [r4, #12]
 8001110:	bd10      	pop	{r4, pc}

08001112 <__swrite>:
 8001112:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001116:	461f      	mov	r7, r3
 8001118:	898b      	ldrh	r3, [r1, #12]
 800111a:	05db      	lsls	r3, r3, #23
 800111c:	4605      	mov	r5, r0
 800111e:	460c      	mov	r4, r1
 8001120:	4616      	mov	r6, r2
 8001122:	d505      	bpl.n	8001130 <__swrite+0x1e>
 8001124:	2302      	movs	r3, #2
 8001126:	2200      	movs	r2, #0
 8001128:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800112c:	f000 f9b6 	bl	800149c <_lseek_r>
 8001130:	89a3      	ldrh	r3, [r4, #12]
 8001132:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001136:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800113a:	81a3      	strh	r3, [r4, #12]
 800113c:	4632      	mov	r2, r6
 800113e:	463b      	mov	r3, r7
 8001140:	4628      	mov	r0, r5
 8001142:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001146:	f000 b869 	b.w	800121c <_write_r>

0800114a <__sseek>:
 800114a:	b510      	push	{r4, lr}
 800114c:	460c      	mov	r4, r1
 800114e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001152:	f000 f9a3 	bl	800149c <_lseek_r>
 8001156:	1c43      	adds	r3, r0, #1
 8001158:	89a3      	ldrh	r3, [r4, #12]
 800115a:	bf15      	itete	ne
 800115c:	6560      	strne	r0, [r4, #84]	; 0x54
 800115e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001162:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001166:	81a3      	strheq	r3, [r4, #12]
 8001168:	bf18      	it	ne
 800116a:	81a3      	strhne	r3, [r4, #12]
 800116c:	bd10      	pop	{r4, pc}

0800116e <__sclose>:
 800116e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001172:	f000 b8d3 	b.w	800131c <_close_r>
	...

08001178 <__swbuf_r>:
 8001178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800117a:	460e      	mov	r6, r1
 800117c:	4614      	mov	r4, r2
 800117e:	4605      	mov	r5, r0
 8001180:	b118      	cbz	r0, 800118a <__swbuf_r+0x12>
 8001182:	6983      	ldr	r3, [r0, #24]
 8001184:	b90b      	cbnz	r3, 800118a <__swbuf_r+0x12>
 8001186:	f7ff fb6b 	bl	8000860 <__sinit>
 800118a:	4b21      	ldr	r3, [pc, #132]	; (8001210 <__swbuf_r+0x98>)
 800118c:	429c      	cmp	r4, r3
 800118e:	d12a      	bne.n	80011e6 <__swbuf_r+0x6e>
 8001190:	686c      	ldr	r4, [r5, #4]
 8001192:	69a3      	ldr	r3, [r4, #24]
 8001194:	60a3      	str	r3, [r4, #8]
 8001196:	89a3      	ldrh	r3, [r4, #12]
 8001198:	071a      	lsls	r2, r3, #28
 800119a:	d52e      	bpl.n	80011fa <__swbuf_r+0x82>
 800119c:	6923      	ldr	r3, [r4, #16]
 800119e:	b363      	cbz	r3, 80011fa <__swbuf_r+0x82>
 80011a0:	6923      	ldr	r3, [r4, #16]
 80011a2:	6820      	ldr	r0, [r4, #0]
 80011a4:	1ac0      	subs	r0, r0, r3
 80011a6:	6963      	ldr	r3, [r4, #20]
 80011a8:	b2f6      	uxtb	r6, r6
 80011aa:	4283      	cmp	r3, r0
 80011ac:	4637      	mov	r7, r6
 80011ae:	dc04      	bgt.n	80011ba <__swbuf_r+0x42>
 80011b0:	4621      	mov	r1, r4
 80011b2:	4628      	mov	r0, r5
 80011b4:	f000 f948 	bl	8001448 <_fflush_r>
 80011b8:	bb28      	cbnz	r0, 8001206 <__swbuf_r+0x8e>
 80011ba:	68a3      	ldr	r3, [r4, #8]
 80011bc:	3b01      	subs	r3, #1
 80011be:	60a3      	str	r3, [r4, #8]
 80011c0:	6823      	ldr	r3, [r4, #0]
 80011c2:	1c5a      	adds	r2, r3, #1
 80011c4:	6022      	str	r2, [r4, #0]
 80011c6:	701e      	strb	r6, [r3, #0]
 80011c8:	6963      	ldr	r3, [r4, #20]
 80011ca:	3001      	adds	r0, #1
 80011cc:	4283      	cmp	r3, r0
 80011ce:	d004      	beq.n	80011da <__swbuf_r+0x62>
 80011d0:	89a3      	ldrh	r3, [r4, #12]
 80011d2:	07db      	lsls	r3, r3, #31
 80011d4:	d519      	bpl.n	800120a <__swbuf_r+0x92>
 80011d6:	2e0a      	cmp	r6, #10
 80011d8:	d117      	bne.n	800120a <__swbuf_r+0x92>
 80011da:	4621      	mov	r1, r4
 80011dc:	4628      	mov	r0, r5
 80011de:	f000 f933 	bl	8001448 <_fflush_r>
 80011e2:	b190      	cbz	r0, 800120a <__swbuf_r+0x92>
 80011e4:	e00f      	b.n	8001206 <__swbuf_r+0x8e>
 80011e6:	4b0b      	ldr	r3, [pc, #44]	; (8001214 <__swbuf_r+0x9c>)
 80011e8:	429c      	cmp	r4, r3
 80011ea:	d101      	bne.n	80011f0 <__swbuf_r+0x78>
 80011ec:	68ac      	ldr	r4, [r5, #8]
 80011ee:	e7d0      	b.n	8001192 <__swbuf_r+0x1a>
 80011f0:	4b09      	ldr	r3, [pc, #36]	; (8001218 <__swbuf_r+0xa0>)
 80011f2:	429c      	cmp	r4, r3
 80011f4:	bf08      	it	eq
 80011f6:	68ec      	ldreq	r4, [r5, #12]
 80011f8:	e7cb      	b.n	8001192 <__swbuf_r+0x1a>
 80011fa:	4621      	mov	r1, r4
 80011fc:	4628      	mov	r0, r5
 80011fe:	f000 f81f 	bl	8001240 <__swsetup_r>
 8001202:	2800      	cmp	r0, #0
 8001204:	d0cc      	beq.n	80011a0 <__swbuf_r+0x28>
 8001206:	f04f 37ff 	mov.w	r7, #4294967295
 800120a:	4638      	mov	r0, r7
 800120c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800120e:	bf00      	nop
 8001210:	0800168c 	.word	0x0800168c
 8001214:	080016ac 	.word	0x080016ac
 8001218:	0800166c 	.word	0x0800166c

0800121c <_write_r>:
 800121c:	b538      	push	{r3, r4, r5, lr}
 800121e:	4c07      	ldr	r4, [pc, #28]	; (800123c <_write_r+0x20>)
 8001220:	4605      	mov	r5, r0
 8001222:	4608      	mov	r0, r1
 8001224:	4611      	mov	r1, r2
 8001226:	2200      	movs	r2, #0
 8001228:	6022      	str	r2, [r4, #0]
 800122a:	461a      	mov	r2, r3
 800122c:	f7ff f99f 	bl	800056e <_write>
 8001230:	1c43      	adds	r3, r0, #1
 8001232:	d102      	bne.n	800123a <_write_r+0x1e>
 8001234:	6823      	ldr	r3, [r4, #0]
 8001236:	b103      	cbz	r3, 800123a <_write_r+0x1e>
 8001238:	602b      	str	r3, [r5, #0]
 800123a:	bd38      	pop	{r3, r4, r5, pc}
 800123c:	200000d4 	.word	0x200000d4

08001240 <__swsetup_r>:
 8001240:	4b32      	ldr	r3, [pc, #200]	; (800130c <__swsetup_r+0xcc>)
 8001242:	b570      	push	{r4, r5, r6, lr}
 8001244:	681d      	ldr	r5, [r3, #0]
 8001246:	4606      	mov	r6, r0
 8001248:	460c      	mov	r4, r1
 800124a:	b125      	cbz	r5, 8001256 <__swsetup_r+0x16>
 800124c:	69ab      	ldr	r3, [r5, #24]
 800124e:	b913      	cbnz	r3, 8001256 <__swsetup_r+0x16>
 8001250:	4628      	mov	r0, r5
 8001252:	f7ff fb05 	bl	8000860 <__sinit>
 8001256:	4b2e      	ldr	r3, [pc, #184]	; (8001310 <__swsetup_r+0xd0>)
 8001258:	429c      	cmp	r4, r3
 800125a:	d10f      	bne.n	800127c <__swsetup_r+0x3c>
 800125c:	686c      	ldr	r4, [r5, #4]
 800125e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001262:	b29a      	uxth	r2, r3
 8001264:	0715      	lsls	r5, r2, #28
 8001266:	d42c      	bmi.n	80012c2 <__swsetup_r+0x82>
 8001268:	06d0      	lsls	r0, r2, #27
 800126a:	d411      	bmi.n	8001290 <__swsetup_r+0x50>
 800126c:	2209      	movs	r2, #9
 800126e:	6032      	str	r2, [r6, #0]
 8001270:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001274:	81a3      	strh	r3, [r4, #12]
 8001276:	f04f 30ff 	mov.w	r0, #4294967295
 800127a:	e03e      	b.n	80012fa <__swsetup_r+0xba>
 800127c:	4b25      	ldr	r3, [pc, #148]	; (8001314 <__swsetup_r+0xd4>)
 800127e:	429c      	cmp	r4, r3
 8001280:	d101      	bne.n	8001286 <__swsetup_r+0x46>
 8001282:	68ac      	ldr	r4, [r5, #8]
 8001284:	e7eb      	b.n	800125e <__swsetup_r+0x1e>
 8001286:	4b24      	ldr	r3, [pc, #144]	; (8001318 <__swsetup_r+0xd8>)
 8001288:	429c      	cmp	r4, r3
 800128a:	bf08      	it	eq
 800128c:	68ec      	ldreq	r4, [r5, #12]
 800128e:	e7e6      	b.n	800125e <__swsetup_r+0x1e>
 8001290:	0751      	lsls	r1, r2, #29
 8001292:	d512      	bpl.n	80012ba <__swsetup_r+0x7a>
 8001294:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001296:	b141      	cbz	r1, 80012aa <__swsetup_r+0x6a>
 8001298:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800129c:	4299      	cmp	r1, r3
 800129e:	d002      	beq.n	80012a6 <__swsetup_r+0x66>
 80012a0:	4630      	mov	r0, r6
 80012a2:	f7ff fb6f 	bl	8000984 <_free_r>
 80012a6:	2300      	movs	r3, #0
 80012a8:	6363      	str	r3, [r4, #52]	; 0x34
 80012aa:	89a3      	ldrh	r3, [r4, #12]
 80012ac:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80012b0:	81a3      	strh	r3, [r4, #12]
 80012b2:	2300      	movs	r3, #0
 80012b4:	6063      	str	r3, [r4, #4]
 80012b6:	6923      	ldr	r3, [r4, #16]
 80012b8:	6023      	str	r3, [r4, #0]
 80012ba:	89a3      	ldrh	r3, [r4, #12]
 80012bc:	f043 0308 	orr.w	r3, r3, #8
 80012c0:	81a3      	strh	r3, [r4, #12]
 80012c2:	6923      	ldr	r3, [r4, #16]
 80012c4:	b94b      	cbnz	r3, 80012da <__swsetup_r+0x9a>
 80012c6:	89a3      	ldrh	r3, [r4, #12]
 80012c8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80012cc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80012d0:	d003      	beq.n	80012da <__swsetup_r+0x9a>
 80012d2:	4621      	mov	r1, r4
 80012d4:	4630      	mov	r0, r6
 80012d6:	f000 f917 	bl	8001508 <__smakebuf_r>
 80012da:	89a2      	ldrh	r2, [r4, #12]
 80012dc:	f012 0301 	ands.w	r3, r2, #1
 80012e0:	d00c      	beq.n	80012fc <__swsetup_r+0xbc>
 80012e2:	2300      	movs	r3, #0
 80012e4:	60a3      	str	r3, [r4, #8]
 80012e6:	6963      	ldr	r3, [r4, #20]
 80012e8:	425b      	negs	r3, r3
 80012ea:	61a3      	str	r3, [r4, #24]
 80012ec:	6923      	ldr	r3, [r4, #16]
 80012ee:	b953      	cbnz	r3, 8001306 <__swsetup_r+0xc6>
 80012f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012f4:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80012f8:	d1ba      	bne.n	8001270 <__swsetup_r+0x30>
 80012fa:	bd70      	pop	{r4, r5, r6, pc}
 80012fc:	0792      	lsls	r2, r2, #30
 80012fe:	bf58      	it	pl
 8001300:	6963      	ldrpl	r3, [r4, #20]
 8001302:	60a3      	str	r3, [r4, #8]
 8001304:	e7f2      	b.n	80012ec <__swsetup_r+0xac>
 8001306:	2000      	movs	r0, #0
 8001308:	e7f7      	b.n	80012fa <__swsetup_r+0xba>
 800130a:	bf00      	nop
 800130c:	20000048 	.word	0x20000048
 8001310:	0800168c 	.word	0x0800168c
 8001314:	080016ac 	.word	0x080016ac
 8001318:	0800166c 	.word	0x0800166c

0800131c <_close_r>:
 800131c:	b538      	push	{r3, r4, r5, lr}
 800131e:	4c06      	ldr	r4, [pc, #24]	; (8001338 <_close_r+0x1c>)
 8001320:	2300      	movs	r3, #0
 8001322:	4605      	mov	r5, r0
 8001324:	4608      	mov	r0, r1
 8001326:	6023      	str	r3, [r4, #0]
 8001328:	f7ff f93d 	bl	80005a6 <_close>
 800132c:	1c43      	adds	r3, r0, #1
 800132e:	d102      	bne.n	8001336 <_close_r+0x1a>
 8001330:	6823      	ldr	r3, [r4, #0]
 8001332:	b103      	cbz	r3, 8001336 <_close_r+0x1a>
 8001334:	602b      	str	r3, [r5, #0]
 8001336:	bd38      	pop	{r3, r4, r5, pc}
 8001338:	200000d4 	.word	0x200000d4

0800133c <__sflush_r>:
 800133c:	898a      	ldrh	r2, [r1, #12]
 800133e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001342:	4605      	mov	r5, r0
 8001344:	0710      	lsls	r0, r2, #28
 8001346:	460c      	mov	r4, r1
 8001348:	d458      	bmi.n	80013fc <__sflush_r+0xc0>
 800134a:	684b      	ldr	r3, [r1, #4]
 800134c:	2b00      	cmp	r3, #0
 800134e:	dc05      	bgt.n	800135c <__sflush_r+0x20>
 8001350:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001352:	2b00      	cmp	r3, #0
 8001354:	dc02      	bgt.n	800135c <__sflush_r+0x20>
 8001356:	2000      	movs	r0, #0
 8001358:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800135c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800135e:	2e00      	cmp	r6, #0
 8001360:	d0f9      	beq.n	8001356 <__sflush_r+0x1a>
 8001362:	2300      	movs	r3, #0
 8001364:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001368:	682f      	ldr	r7, [r5, #0]
 800136a:	6a21      	ldr	r1, [r4, #32]
 800136c:	602b      	str	r3, [r5, #0]
 800136e:	d032      	beq.n	80013d6 <__sflush_r+0x9a>
 8001370:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001372:	89a3      	ldrh	r3, [r4, #12]
 8001374:	075a      	lsls	r2, r3, #29
 8001376:	d505      	bpl.n	8001384 <__sflush_r+0x48>
 8001378:	6863      	ldr	r3, [r4, #4]
 800137a:	1ac0      	subs	r0, r0, r3
 800137c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800137e:	b10b      	cbz	r3, 8001384 <__sflush_r+0x48>
 8001380:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001382:	1ac0      	subs	r0, r0, r3
 8001384:	2300      	movs	r3, #0
 8001386:	4602      	mov	r2, r0
 8001388:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800138a:	6a21      	ldr	r1, [r4, #32]
 800138c:	4628      	mov	r0, r5
 800138e:	47b0      	blx	r6
 8001390:	1c43      	adds	r3, r0, #1
 8001392:	89a3      	ldrh	r3, [r4, #12]
 8001394:	d106      	bne.n	80013a4 <__sflush_r+0x68>
 8001396:	6829      	ldr	r1, [r5, #0]
 8001398:	291d      	cmp	r1, #29
 800139a:	d848      	bhi.n	800142e <__sflush_r+0xf2>
 800139c:	4a29      	ldr	r2, [pc, #164]	; (8001444 <__sflush_r+0x108>)
 800139e:	40ca      	lsrs	r2, r1
 80013a0:	07d6      	lsls	r6, r2, #31
 80013a2:	d544      	bpl.n	800142e <__sflush_r+0xf2>
 80013a4:	2200      	movs	r2, #0
 80013a6:	6062      	str	r2, [r4, #4]
 80013a8:	04d9      	lsls	r1, r3, #19
 80013aa:	6922      	ldr	r2, [r4, #16]
 80013ac:	6022      	str	r2, [r4, #0]
 80013ae:	d504      	bpl.n	80013ba <__sflush_r+0x7e>
 80013b0:	1c42      	adds	r2, r0, #1
 80013b2:	d101      	bne.n	80013b8 <__sflush_r+0x7c>
 80013b4:	682b      	ldr	r3, [r5, #0]
 80013b6:	b903      	cbnz	r3, 80013ba <__sflush_r+0x7e>
 80013b8:	6560      	str	r0, [r4, #84]	; 0x54
 80013ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80013bc:	602f      	str	r7, [r5, #0]
 80013be:	2900      	cmp	r1, #0
 80013c0:	d0c9      	beq.n	8001356 <__sflush_r+0x1a>
 80013c2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80013c6:	4299      	cmp	r1, r3
 80013c8:	d002      	beq.n	80013d0 <__sflush_r+0x94>
 80013ca:	4628      	mov	r0, r5
 80013cc:	f7ff fada 	bl	8000984 <_free_r>
 80013d0:	2000      	movs	r0, #0
 80013d2:	6360      	str	r0, [r4, #52]	; 0x34
 80013d4:	e7c0      	b.n	8001358 <__sflush_r+0x1c>
 80013d6:	2301      	movs	r3, #1
 80013d8:	4628      	mov	r0, r5
 80013da:	47b0      	blx	r6
 80013dc:	1c41      	adds	r1, r0, #1
 80013de:	d1c8      	bne.n	8001372 <__sflush_r+0x36>
 80013e0:	682b      	ldr	r3, [r5, #0]
 80013e2:	2b00      	cmp	r3, #0
 80013e4:	d0c5      	beq.n	8001372 <__sflush_r+0x36>
 80013e6:	2b1d      	cmp	r3, #29
 80013e8:	d001      	beq.n	80013ee <__sflush_r+0xb2>
 80013ea:	2b16      	cmp	r3, #22
 80013ec:	d101      	bne.n	80013f2 <__sflush_r+0xb6>
 80013ee:	602f      	str	r7, [r5, #0]
 80013f0:	e7b1      	b.n	8001356 <__sflush_r+0x1a>
 80013f2:	89a3      	ldrh	r3, [r4, #12]
 80013f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80013f8:	81a3      	strh	r3, [r4, #12]
 80013fa:	e7ad      	b.n	8001358 <__sflush_r+0x1c>
 80013fc:	690f      	ldr	r7, [r1, #16]
 80013fe:	2f00      	cmp	r7, #0
 8001400:	d0a9      	beq.n	8001356 <__sflush_r+0x1a>
 8001402:	0793      	lsls	r3, r2, #30
 8001404:	680e      	ldr	r6, [r1, #0]
 8001406:	bf08      	it	eq
 8001408:	694b      	ldreq	r3, [r1, #20]
 800140a:	600f      	str	r7, [r1, #0]
 800140c:	bf18      	it	ne
 800140e:	2300      	movne	r3, #0
 8001410:	eba6 0807 	sub.w	r8, r6, r7
 8001414:	608b      	str	r3, [r1, #8]
 8001416:	f1b8 0f00 	cmp.w	r8, #0
 800141a:	dd9c      	ble.n	8001356 <__sflush_r+0x1a>
 800141c:	4643      	mov	r3, r8
 800141e:	463a      	mov	r2, r7
 8001420:	6a21      	ldr	r1, [r4, #32]
 8001422:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001424:	4628      	mov	r0, r5
 8001426:	47b0      	blx	r6
 8001428:	2800      	cmp	r0, #0
 800142a:	dc06      	bgt.n	800143a <__sflush_r+0xfe>
 800142c:	89a3      	ldrh	r3, [r4, #12]
 800142e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001432:	81a3      	strh	r3, [r4, #12]
 8001434:	f04f 30ff 	mov.w	r0, #4294967295
 8001438:	e78e      	b.n	8001358 <__sflush_r+0x1c>
 800143a:	4407      	add	r7, r0
 800143c:	eba8 0800 	sub.w	r8, r8, r0
 8001440:	e7e9      	b.n	8001416 <__sflush_r+0xda>
 8001442:	bf00      	nop
 8001444:	20400001 	.word	0x20400001

08001448 <_fflush_r>:
 8001448:	b538      	push	{r3, r4, r5, lr}
 800144a:	690b      	ldr	r3, [r1, #16]
 800144c:	4605      	mov	r5, r0
 800144e:	460c      	mov	r4, r1
 8001450:	b1db      	cbz	r3, 800148a <_fflush_r+0x42>
 8001452:	b118      	cbz	r0, 800145c <_fflush_r+0x14>
 8001454:	6983      	ldr	r3, [r0, #24]
 8001456:	b90b      	cbnz	r3, 800145c <_fflush_r+0x14>
 8001458:	f7ff fa02 	bl	8000860 <__sinit>
 800145c:	4b0c      	ldr	r3, [pc, #48]	; (8001490 <_fflush_r+0x48>)
 800145e:	429c      	cmp	r4, r3
 8001460:	d109      	bne.n	8001476 <_fflush_r+0x2e>
 8001462:	686c      	ldr	r4, [r5, #4]
 8001464:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001468:	b17b      	cbz	r3, 800148a <_fflush_r+0x42>
 800146a:	4621      	mov	r1, r4
 800146c:	4628      	mov	r0, r5
 800146e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001472:	f7ff bf63 	b.w	800133c <__sflush_r>
 8001476:	4b07      	ldr	r3, [pc, #28]	; (8001494 <_fflush_r+0x4c>)
 8001478:	429c      	cmp	r4, r3
 800147a:	d101      	bne.n	8001480 <_fflush_r+0x38>
 800147c:	68ac      	ldr	r4, [r5, #8]
 800147e:	e7f1      	b.n	8001464 <_fflush_r+0x1c>
 8001480:	4b05      	ldr	r3, [pc, #20]	; (8001498 <_fflush_r+0x50>)
 8001482:	429c      	cmp	r4, r3
 8001484:	bf08      	it	eq
 8001486:	68ec      	ldreq	r4, [r5, #12]
 8001488:	e7ec      	b.n	8001464 <_fflush_r+0x1c>
 800148a:	2000      	movs	r0, #0
 800148c:	bd38      	pop	{r3, r4, r5, pc}
 800148e:	bf00      	nop
 8001490:	0800168c 	.word	0x0800168c
 8001494:	080016ac 	.word	0x080016ac
 8001498:	0800166c 	.word	0x0800166c

0800149c <_lseek_r>:
 800149c:	b538      	push	{r3, r4, r5, lr}
 800149e:	4c07      	ldr	r4, [pc, #28]	; (80014bc <_lseek_r+0x20>)
 80014a0:	4605      	mov	r5, r0
 80014a2:	4608      	mov	r0, r1
 80014a4:	4611      	mov	r1, r2
 80014a6:	2200      	movs	r2, #0
 80014a8:	6022      	str	r2, [r4, #0]
 80014aa:	461a      	mov	r2, r3
 80014ac:	f7ff f8a2 	bl	80005f4 <_lseek>
 80014b0:	1c43      	adds	r3, r0, #1
 80014b2:	d102      	bne.n	80014ba <_lseek_r+0x1e>
 80014b4:	6823      	ldr	r3, [r4, #0]
 80014b6:	b103      	cbz	r3, 80014ba <_lseek_r+0x1e>
 80014b8:	602b      	str	r3, [r5, #0]
 80014ba:	bd38      	pop	{r3, r4, r5, pc}
 80014bc:	200000d4 	.word	0x200000d4

080014c0 <__swhatbuf_r>:
 80014c0:	b570      	push	{r4, r5, r6, lr}
 80014c2:	460e      	mov	r6, r1
 80014c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014c8:	2900      	cmp	r1, #0
 80014ca:	b096      	sub	sp, #88	; 0x58
 80014cc:	4614      	mov	r4, r2
 80014ce:	461d      	mov	r5, r3
 80014d0:	da07      	bge.n	80014e2 <__swhatbuf_r+0x22>
 80014d2:	2300      	movs	r3, #0
 80014d4:	602b      	str	r3, [r5, #0]
 80014d6:	89b3      	ldrh	r3, [r6, #12]
 80014d8:	061a      	lsls	r2, r3, #24
 80014da:	d410      	bmi.n	80014fe <__swhatbuf_r+0x3e>
 80014dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80014e0:	e00e      	b.n	8001500 <__swhatbuf_r+0x40>
 80014e2:	466a      	mov	r2, sp
 80014e4:	f000 f864 	bl	80015b0 <_fstat_r>
 80014e8:	2800      	cmp	r0, #0
 80014ea:	dbf2      	blt.n	80014d2 <__swhatbuf_r+0x12>
 80014ec:	9a01      	ldr	r2, [sp, #4]
 80014ee:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80014f2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80014f6:	425a      	negs	r2, r3
 80014f8:	415a      	adcs	r2, r3
 80014fa:	602a      	str	r2, [r5, #0]
 80014fc:	e7ee      	b.n	80014dc <__swhatbuf_r+0x1c>
 80014fe:	2340      	movs	r3, #64	; 0x40
 8001500:	2000      	movs	r0, #0
 8001502:	6023      	str	r3, [r4, #0]
 8001504:	b016      	add	sp, #88	; 0x58
 8001506:	bd70      	pop	{r4, r5, r6, pc}

08001508 <__smakebuf_r>:
 8001508:	898b      	ldrh	r3, [r1, #12]
 800150a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800150c:	079d      	lsls	r5, r3, #30
 800150e:	4606      	mov	r6, r0
 8001510:	460c      	mov	r4, r1
 8001512:	d507      	bpl.n	8001524 <__smakebuf_r+0x1c>
 8001514:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001518:	6023      	str	r3, [r4, #0]
 800151a:	6123      	str	r3, [r4, #16]
 800151c:	2301      	movs	r3, #1
 800151e:	6163      	str	r3, [r4, #20]
 8001520:	b002      	add	sp, #8
 8001522:	bd70      	pop	{r4, r5, r6, pc}
 8001524:	ab01      	add	r3, sp, #4
 8001526:	466a      	mov	r2, sp
 8001528:	f7ff ffca 	bl	80014c0 <__swhatbuf_r>
 800152c:	9900      	ldr	r1, [sp, #0]
 800152e:	4605      	mov	r5, r0
 8001530:	4630      	mov	r0, r6
 8001532:	f7ff fa75 	bl	8000a20 <_malloc_r>
 8001536:	b948      	cbnz	r0, 800154c <__smakebuf_r+0x44>
 8001538:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800153c:	059a      	lsls	r2, r3, #22
 800153e:	d4ef      	bmi.n	8001520 <__smakebuf_r+0x18>
 8001540:	f023 0303 	bic.w	r3, r3, #3
 8001544:	f043 0302 	orr.w	r3, r3, #2
 8001548:	81a3      	strh	r3, [r4, #12]
 800154a:	e7e3      	b.n	8001514 <__smakebuf_r+0xc>
 800154c:	4b0d      	ldr	r3, [pc, #52]	; (8001584 <__smakebuf_r+0x7c>)
 800154e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001550:	89a3      	ldrh	r3, [r4, #12]
 8001552:	6020      	str	r0, [r4, #0]
 8001554:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001558:	81a3      	strh	r3, [r4, #12]
 800155a:	9b00      	ldr	r3, [sp, #0]
 800155c:	6163      	str	r3, [r4, #20]
 800155e:	9b01      	ldr	r3, [sp, #4]
 8001560:	6120      	str	r0, [r4, #16]
 8001562:	b15b      	cbz	r3, 800157c <__smakebuf_r+0x74>
 8001564:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001568:	4630      	mov	r0, r6
 800156a:	f000 f833 	bl	80015d4 <_isatty_r>
 800156e:	b128      	cbz	r0, 800157c <__smakebuf_r+0x74>
 8001570:	89a3      	ldrh	r3, [r4, #12]
 8001572:	f023 0303 	bic.w	r3, r3, #3
 8001576:	f043 0301 	orr.w	r3, r3, #1
 800157a:	81a3      	strh	r3, [r4, #12]
 800157c:	89a3      	ldrh	r3, [r4, #12]
 800157e:	431d      	orrs	r5, r3
 8001580:	81a5      	strh	r5, [r4, #12]
 8001582:	e7cd      	b.n	8001520 <__smakebuf_r+0x18>
 8001584:	08000829 	.word	0x08000829

08001588 <__malloc_lock>:
 8001588:	4770      	bx	lr

0800158a <__malloc_unlock>:
 800158a:	4770      	bx	lr

0800158c <_read_r>:
 800158c:	b538      	push	{r3, r4, r5, lr}
 800158e:	4c07      	ldr	r4, [pc, #28]	; (80015ac <_read_r+0x20>)
 8001590:	4605      	mov	r5, r0
 8001592:	4608      	mov	r0, r1
 8001594:	4611      	mov	r1, r2
 8001596:	2200      	movs	r2, #0
 8001598:	6022      	str	r2, [r4, #0]
 800159a:	461a      	mov	r2, r3
 800159c:	f7fe ffca 	bl	8000534 <_read>
 80015a0:	1c43      	adds	r3, r0, #1
 80015a2:	d102      	bne.n	80015aa <_read_r+0x1e>
 80015a4:	6823      	ldr	r3, [r4, #0]
 80015a6:	b103      	cbz	r3, 80015aa <_read_r+0x1e>
 80015a8:	602b      	str	r3, [r5, #0]
 80015aa:	bd38      	pop	{r3, r4, r5, pc}
 80015ac:	200000d4 	.word	0x200000d4

080015b0 <_fstat_r>:
 80015b0:	b538      	push	{r3, r4, r5, lr}
 80015b2:	4c07      	ldr	r4, [pc, #28]	; (80015d0 <_fstat_r+0x20>)
 80015b4:	2300      	movs	r3, #0
 80015b6:	4605      	mov	r5, r0
 80015b8:	4608      	mov	r0, r1
 80015ba:	4611      	mov	r1, r2
 80015bc:	6023      	str	r3, [r4, #0]
 80015be:	f7fe fffe 	bl	80005be <_fstat>
 80015c2:	1c43      	adds	r3, r0, #1
 80015c4:	d102      	bne.n	80015cc <_fstat_r+0x1c>
 80015c6:	6823      	ldr	r3, [r4, #0]
 80015c8:	b103      	cbz	r3, 80015cc <_fstat_r+0x1c>
 80015ca:	602b      	str	r3, [r5, #0]
 80015cc:	bd38      	pop	{r3, r4, r5, pc}
 80015ce:	bf00      	nop
 80015d0:	200000d4 	.word	0x200000d4

080015d4 <_isatty_r>:
 80015d4:	b538      	push	{r3, r4, r5, lr}
 80015d6:	4c06      	ldr	r4, [pc, #24]	; (80015f0 <_isatty_r+0x1c>)
 80015d8:	2300      	movs	r3, #0
 80015da:	4605      	mov	r5, r0
 80015dc:	4608      	mov	r0, r1
 80015de:	6023      	str	r3, [r4, #0]
 80015e0:	f7fe fffd 	bl	80005de <_isatty>
 80015e4:	1c43      	adds	r3, r0, #1
 80015e6:	d102      	bne.n	80015ee <_isatty_r+0x1a>
 80015e8:	6823      	ldr	r3, [r4, #0]
 80015ea:	b103      	cbz	r3, 80015ee <_isatty_r+0x1a>
 80015ec:	602b      	str	r3, [r5, #0]
 80015ee:	bd38      	pop	{r3, r4, r5, pc}
 80015f0:	200000d4 	.word	0x200000d4

080015f4 <_init>:
 80015f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015f6:	bf00      	nop
 80015f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015fa:	bc08      	pop	{r3}
 80015fc:	469e      	mov	lr, r3
 80015fe:	4770      	bx	lr

08001600 <_fini>:
 8001600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001602:	bf00      	nop
 8001604:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001606:	bc08      	pop	{r3}
 8001608:	469e      	mov	lr, r3
 800160a:	4770      	bx	lr
